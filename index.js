(()=>{"use strict";var e={d:(t,i)=>{for(var s in i)e.o(i,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:i[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{nS:()=>pt,Wc:()=>dt,qH:()=>mt,DH:()=>xt,YM:()=>ct,Vq:()=>ut,n6:()=>ft,hd:()=>lt,cM:()=>ht,XV:()=>ot});var t="undefined"!=typeof Float32Array?Float32Array:Array;Math.random;var i=Math.PI/180;function s(e){return e*i}function r(){var e=new t(3);return t!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function n(e,i,s){var r=new t(3);return r[0]=e,r[1]=i,r[2]=s,r}function a(e,t,i,s){return e[0]=t,e[1]=i,e[2]=s,e}function o(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}function c(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function l(e,t){var i=t[0],s=t[1],r=t[2],n=i*i+s*s+r*r;return n>0&&(n=1/Math.sqrt(n)),e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});function h(){var e=new t(16);return t!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function u(e,t,i,s){var r=t[0],n=t[1],a=t[2],o=t[3],c=r+r,l=n+n,h=a+a,u=r*c,d=r*l,m=r*h,p=n*l,g=n*h,f=a*h,x=o*c,v=o*l,E=o*h,b=s[0],C=s[1],T=s[2];return e[0]=(1-(p+f))*b,e[1]=(d+E)*b,e[2]=(m-v)*b,e[3]=0,e[4]=(d-E)*C,e[5]=(1-(u+f))*C,e[6]=(g+x)*C,e[7]=0,e[8]=(m+v)*T,e[9]=(g-x)*T,e[10]=(1-(u+p))*T,e[11]=0,e[12]=i[0],e[13]=i[1],e[14]=i[2],e[15]=1,e}r();function d(){var e=new t(4);return t!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function m(e,t,i,s,r){return e[0]=t,e[1]=i,e[2]=s,e[3]=r,e}function p(){var e=new t(4);return t!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}function g(e,t,i,s){var r=.5*Math.PI/180;t*=r,i*=r,s*=r;var n=Math.sin(t),a=Math.cos(t),o=Math.sin(i),c=Math.cos(i),l=Math.sin(s),h=Math.cos(s);return e[0]=n*c*h-a*o*l,e[1]=a*o*h+n*c*l,e[2]=a*c*l-n*o*h,e[3]=a*c*h+n*o*l,e}d();var f;r(),n(1,0,0),n(0,1,0),p(),p(),f=new t(9),t!=Float32Array&&(f[1]=0,f[2]=0,f[3]=0,f[5]=0,f[6]=0,f[7]=0),f[0]=1,f[4]=1,f[8]=1;const x=new ArrayBuffer(64),v=function(){const e=[];for(let t=1;t<=16;t++)e.push(new Float32Array(x,0,t));return e}(),E=[];function b(e){const t=e,i=v[t.length-1];return i.set(t),i}function C(e){return document.querySelector(e)}function T(e){return e/1024/1024}function w(e){return e/1e3/1e3}function D(e,t,i){const s=E.pop();return s?a(s,e,t,i):n(e,t,i)}function y(e){E.push(e)}class I{static getMaxFrustumDistance(){return this.maxFrustumDistance}static updateMaxFrustumDistance(){const e=function(e,t){if(!t){const e=ft.getCanvas();t=e.clientWidth/e.clientHeight}return 2*Math.atan(Math.tan(.5*s(e))*t)}(ct.getFovY());this.maxFrustumDistance=ct.getViewDistance()/Math.cos(e/2)}constructor(){this.position=n(0,5,15),this.rotation=0,this.R=h(),this.q=p(),this.tempVec=r(),this.V=h(),this.P=h(),this.VP=h(),this.forward=r(),this.right=r(),this.valid=!1,I.updateMaxFrustumDistance()}getPosition(){return this.position}move(e){o(this.position,this.position,e),this.valid=!1}getRotation(){return this.rotation}rotate(e){this.rotation+=e,this.valid=!1}getVP(){return this.valid||(this.update(),this.valid=!0),this.VP}getForward(){return this.valid||(this.update(),this.valid=!0),this.forward}getRight(){return this.valid||(this.update(),this.valid=!0),this.right}update(){this.updateV(),this.updateP(),function(e,t,i){var s=t[0],r=t[1],n=t[2],a=t[3],o=t[4],c=t[5],l=t[6],h=t[7],u=t[8],d=t[9],m=t[10],p=t[11],g=t[12],f=t[13],x=t[14],v=t[15],E=i[0],b=i[1],C=i[2],T=i[3];e[0]=E*s+b*o+C*u+T*g,e[1]=E*r+b*c+C*d+T*f,e[2]=E*n+b*l+C*m+T*x,e[3]=E*a+b*h+C*p+T*v,E=i[4],b=i[5],C=i[6],T=i[7],e[4]=E*s+b*o+C*u+T*g,e[5]=E*r+b*c+C*d+T*f,e[6]=E*n+b*l+C*m+T*x,e[7]=E*a+b*h+C*p+T*v,E=i[8],b=i[9],C=i[10],T=i[11],e[8]=E*s+b*o+C*u+T*g,e[9]=E*r+b*c+C*d+T*f,e[10]=E*n+b*l+C*m+T*x,e[11]=E*a+b*h+C*p+T*v,E=i[12],b=i[13],C=i[14],T=i[15],e[12]=E*s+b*o+C*u+T*g,e[13]=E*r+b*c+C*d+T*f,e[14]=E*n+b*l+C*m+T*x,e[15]=E*a+b*h+C*p+T*v}(this.VP,this.P,this.V)}updateV(){!function(e,t){var i=t[0],s=t[1],r=t[2],n=t[3],a=i+i,o=s+s,c=r+r,l=i*a,h=s*a,u=s*o,d=r*a,m=r*o,p=r*c,g=n*a,f=n*o,x=n*c;e[0]=1-u-p,e[1]=h+x,e[2]=d-f,e[3]=0,e[4]=h-x,e[5]=1-l-p,e[6]=m+g,e[7]=0,e[8]=d+f,e[9]=m-g,e[10]=1-l-u,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(this.R,g(this.q,0,-this.rotation,0)),function(e,t,i){var s,r,n,a,o,c,l,h,u,d,m,p,g=i[0],f=i[1],x=i[2];t===e?(e[12]=t[0]*g+t[4]*f+t[8]*x+t[12],e[13]=t[1]*g+t[5]*f+t[9]*x+t[13],e[14]=t[2]*g+t[6]*f+t[10]*x+t[14],e[15]=t[3]*g+t[7]*f+t[11]*x+t[15]):(s=t[0],r=t[1],n=t[2],a=t[3],o=t[4],c=t[5],l=t[6],h=t[7],u=t[8],d=t[9],m=t[10],p=t[11],e[0]=s,e[1]=r,e[2]=n,e[3]=a,e[4]=o,e[5]=c,e[6]=l,e[7]=h,e[8]=u,e[9]=d,e[10]=m,e[11]=p,e[12]=s*g+o*f+u*x+t[12],e[13]=r*g+c*f+d*x+t[13],e[14]=n*g+l*f+m*x+t[14],e[15]=a*g+h*f+p*x+t[15])}(this.V,this.R,function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}(this.tempVec,this.position)),a(this.forward,this.R[8],this.R[9],-this.R[10]),a(this.right,this.R[0],this.R[1],-this.R[2])}updateP(){const e=s(ct.getFovY()),t=ft.getCanvas(),i=t.clientWidth/t.clientHeight,r=ct.getViewDistance();ft.getCapabilities().isNdcCube?function(e,t,i,s,r){var n,a=1/Math.tan(t/2);e[0]=a/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=r&&r!==1/0?(n=1/(s-r),e[10]=(r+s)*n,e[14]=2*r*s*n):(e[10]=-1,e[14]=-2*s)}(this.P,e,i,.5,r):function(e,t,i,s,r){var n,a=1/Math.tan(t/2);e[0]=a/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=r&&r!==1/0?(n=1/(.5-r),e[10]=r*n,e[14]=.5*r*n):(e[10]=-1,e[14]=-.5)}(this.P,e,i,0,r)}invalidate(){this.valid=!1}}var A,S,_;I.maxFrustumDistance=0,function(e){e[e.AUTO=0]="AUTO",e[e.WEBGL_1=1]="WEBGL_1",e[e.WEBGL_2=2]="WEBGL_2",e[e.WEBGPU=3]="WEBGPU"}(A||(A={}));class M{constructor(){this.renderingApi=A.AUTO,this.fovY=50,this.viewDistance=500,this.cellSize=100,this.instanceCount=100,this.statistics=!1,this.frustumCulling=!0,this.cellsDebugger=!1,this.loadApi(),this.loadStatistics(),this.loadFrustumCulling(),this.loadCellsDebugger(),this.loadFovY(),this.loadViewDistance(),this.loadCellSize(),this.loadInstanceCount()}loadApi(){const e=localStorage.getItem("renderingApi");if(null==e)return;const t=Number.parseInt(e);t!==A.AUTO&&t!==A.WEBGL_1&&t!==A.WEBGL_2&&t!==A.WEBGPU||(this.renderingApi=t)}loadStatistics(){const e=localStorage.getItem("statistics");null!=e&&(this.statistics="true"===e)}loadFrustumCulling(){const e=localStorage.getItem("frustumCulling");null!=e&&(this.frustumCulling="true"===e)}loadCellsDebugger(){const e=localStorage.getItem("cellsDebugger");null!=e&&(this.cellsDebugger="true"===e)}loadFovY(){const e=localStorage.getItem("fovY");null!=e&&(this.fovY=Math.min(Math.max(1,+e),179))}loadViewDistance(){const e=localStorage.getItem("viewDistance");null!=e&&(this.viewDistance=Math.max(+e,1))}loadCellSize(){const e=localStorage.getItem("cellSize");null!=e&&(this.cellSize=Math.max(+e,1))}loadInstanceCount(){const e=localStorage.getItem("instanceCount");null!=e&&(this.instanceCount=Math.max(+e,0))}getRenderingApi(){return this.renderingApi}setRenderingApi(e){this.renderingApi=e,localStorage.setItem("renderingApi",this.renderingApi.toString()),ft.restart(),pt.invalidate()}isStatistics(){return this.statistics}setStatistics(e){this.statistics=e,localStorage.setItem("statistics",this.statistics.toString()),e||ht.hide()}isFrustumCulling(){return this.frustumCulling}setFrustumCulling(e){this.frustumCulling=e,localStorage.setItem("frustumCulling",this.frustumCulling.toString())}isCellsDebugger(){return this.cellsDebugger}setCellsDebugger(e){this.cellsDebugger=e,localStorage.setItem("cellsDebugger",this.cellsDebugger.toString()),dt.update(),e?dt.show():dt.hide()}getFovY(){return this.fovY}setFovY(e){this.fovY=e,localStorage.setItem("fovY",this.fovY.toString()),I.updateMaxFrustumDistance(),dt.update(),pt.invalidate()}getViewDistance(){return this.viewDistance}setViewDistance(e){this.viewDistance=e,localStorage.setItem("viewDistance",this.viewDistance.toString()),I.updateMaxFrustumDistance(),dt.update(),pt.invalidate()}getCellSize(){return this.cellSize}setCellSize(e){this.cellSize=e,localStorage.setItem("cellSize",this.cellSize.toString()),ft.removeAllCells(),dt.update()}getInstanceCount(){return this.instanceCount}setInstanceCount(e){this.instanceCount=e,localStorage.setItem("instanceCount",this.instanceCount.toString()),ft.removeAllCells(),dt.update()}}class F{constructor(e){this.descriptor=e}getId(){return null}getDescriptor(){return this.descriptor}}class R{constructor(e){this.descriptor=e}async initialize(){this.pipeline=await V().getDevice().createRenderPipelineAsync({vertex:{module:this.descriptor.shader.getId(),buffers:this.descriptor.vertexBuffers.map((e=>({arrayStride:e.stride,stepMode:e.isInstanced?"instance":"vertex",attributes:e.attributes.map((e=>({shaderLocation:e.index,offset:e.offset,format:this.getFormat(e.format)})))})))},fragment:{module:this.descriptor.shader.getId(),targets:this.descriptor.attachmentFormats.map((e=>({format:"canvas"===e?V().getCanvasFormat():"rgba8unorm"})))},depthStencil:this.descriptor.depthAttachment?{format:"depth32float",depthWriteEnabled:!0,depthCompare:"less"}:void 0,primitive:{cullMode:"back"},layout:"auto",label:this.descriptor.label}),lt.increment("api-calls",1)}getId(){return this.pipeline}getDescriptor(){return this.descriptor}getFormat(e){switch(e){case S.FLOAT_1:return"float32";case S.FLOAT_2:return"float32x2";case S.FLOAT_3:return"float32x3";case S.FLOAT_4:return"float32x4"}}}async function B(e){if(Ke())return new F(e);if(Je())return new F(e);{const t=new R(e);return t.initialize().then((()=>t))}}!function(e){e[e.FLOAT_1=1]="FLOAT_1",e[e.FLOAT_2=2]="FLOAT_2",e[e.FLOAT_3=3]="FLOAT_3",e[e.FLOAT_4=4]="FLOAT_4"}(S||(S={}));class P{initializeShared(e){this.context=this.createContext(),this.context.enable(this.context.DEPTH_TEST),this.context.enable(this.context.CULL_FACE),lt.increment("api-calls",2),ft.getCapabilities().isNdcCube=!0,ft.getCapabilities().instanceOffset=!1,this.capabilitiesAndExtensions()}getContext(e){const t=ft.getCanvas().getContext(e,{powerPreference:"high-performance",depth:!1,antialias:!1});return lt.increment("api-calls",1),ft.getCanvas().addEventListener("webglcontextlost",(e=>{console.log("WebGL context lost",e),xt()})),t}getId(){return this.context}async stop(){this.context.flush(),lt.increment("api-calls",1)}configVbo(e){this.context.bindBuffer(this.context.ARRAY_BUFFER,e.buffer.getId()),lt.increment("api-calls",1);const t=e.layout;for(const i of t.attributes){this.context.vertexAttribPointer(i.index,this.getVertexAttribPointerSize(i.format),this.context.FLOAT,!1,t.stride,i.offset+(e.offset??0));const s=t.isInstanced?1:0;this.vertexAttribDivisor(i.index,s),this.context.enableVertexAttribArray(i.index),lt.increment("api-calls",3)}}configEbo(e){this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,e.getId()),lt.increment("api-calls",1)}getVertexAttribPointerSize(e){switch(e){case S.FLOAT_1:return 1;case S.FLOAT_2:return 2;case S.FLOAT_3:return 3;case S.FLOAT_4:return 4}}configDraw(e,t,i){this.configVbo(e),i&&this.configVbo(i),this.configEbo(t)}release(){}}class U extends P{constructor(){super(...arguments),this.gl1GpuTimeExtension=null,this.gl1InstancedRenderingExtension=null,this.gl1DepthTexture=null,this.gl1VertexArrayObject=null}initialize(){this.initializeShared("WebGL 1")}getId(){return this.context}capabilitiesAndExtensions(){this.gl1GpuTimeExtension=this.context.getExtension("EXT_disjoint_timer_query"),this.gl1InstancedRenderingExtension=this.context.getExtension("ANGLE_instanced_arrays"),this.gl1DepthTexture=this.context.getExtension("WEBGL_depth_texture"),this.gl1VertexArrayObject=this.context.getExtension("OES_vertex_array_object"),lt.increment("api-calls",3);let e=0;this.gl1GpuTimeExtension&&(e=this.gl1GpuTimeExtension.getQueryEXT(this.gl1GpuTimeExtension.TIME_ELAPSED_EXT,this.gl1GpuTimeExtension.QUERY_COUNTER_BITS_EXT),lt.increment("api-calls",1)),ft.getCapabilities().uniformBuffer=!1,ft.getCapabilities().gpuTimer=!(!this.gl1GpuTimeExtension||!e),ft.getCapabilities().instancedRendering=!!this.gl1InstancedRenderingExtension,ft.getCapabilities().debugGroups=!1,ft.getCapabilities().depthTexture=!!this.gl1DepthTexture,ft.getCapabilities().uvUp=!0,ft.getCapabilities().vertexArray=!!this.gl1VertexArrayObject}createContext(){const e=this.getContext("webgl")||this.getContext("webgl-experimental");if(!e)throw new Error("Couldn't create a WebGL 1 context");return e}getGpuTimeExtension(){return this.gl1GpuTimeExtension}getInstancedRenderingExtension(){return this.gl1InstancedRenderingExtension}getDepthTextureExtension(){return this.gl1DepthTexture}getVertexArrayObjectExtension(){return this.gl1VertexArrayObject}vertexAttribDivisor(e,t){this.getInstancedRenderingExtension().vertexAttribDivisorANGLE(e,t)}}class L extends P{constructor(){super(...arguments),this.gl2GpuTimeExtension=null}initialize(){this.initializeShared("WebGL 2")}getGpuTimeExtension(){return this.gl2GpuTimeExtension}getId(){return this.context}capabilitiesAndExtensions(){this.gl2GpuTimeExtension=this.context.getExtension("EXT_disjoint_timer_query_webgl2"),lt.increment("api-calls",1);let e=0;this.gl2GpuTimeExtension&&(e=this.context.getQuery(this.gl2GpuTimeExtension.TIME_ELAPSED_EXT,this.gl2GpuTimeExtension.QUERY_COUNTER_BITS_EXT),lt.increment("api-calls",1)),ft.getCapabilities().uniformBuffer=!0,ft.getCapabilities().gpuTimer=!(!this.gl2GpuTimeExtension||!e),ft.getCapabilities().instancedRendering=!0,ft.getCapabilities().debugGroups=!1,ft.getCapabilities().depthTexture=!0,ft.getCapabilities().uvUp=!0,ft.getCapabilities().vertexArray=!0}createContext(){const e=this.getContext("webgl2");if(!e)throw new Error("Couldn't create a WebGL 2 context");return e}vertexAttribDivisor(e,t){this.context.vertexAttribDivisor(e,t)}}class G{constructor(){this.deviceLostCount=0,this.valid=!0}async initialize(){this.checkWebGPUSupport();const e=await this.getAdapter();this.device=await this.createDevice(e),this.context=this.getContext(),ft.getCapabilities().isNdcCube=!1,ft.getCapabilities().uniformBuffer=!0,ft.getCapabilities().instancedRendering=!0,ft.getCapabilities().debugGroups=!0,ft.getCapabilities().instanceOffset=!0,ft.getCapabilities().depthTexture=!0,ft.getCapabilities().uvUp=!1,ft.getCapabilities().vertexArray=!1}getId(){return this.context}getCanvasFormat(){return this.canvasFormat}getDevice(){return this.device}getCurrentTexture(){return lt.increment("api-calls",1),this.context.getCurrentTexture()}checkWebGPUSupport(){if(!navigator.gpu)throw new Error("WebGPU isn't supported")}async getAdapter(){const e=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(lt.increment("api-calls",1),!e||e.isFallbackAdapter)throw new Error("Couldn't get an adapter");return e}async logAdapterInfo(e){}async createDevice(e){const t=this.createDeviceDescriptor(e),i=await e.requestDevice(t);return lt.increment("api-calls",1),i.lost.then((e=>{"destroyed"!==e.reason&&(console.error("Device lost"),console.error(`Reason: ${e.reason}`),console.error(`Message: ${e.message}`),this.deviceLostCount++,this.deviceLostCount<=5&&xt())})),i}createDeviceDescriptor(e){const t={},i="timestamp-query";return ft.getCapabilities().gpuTimer=e.features.has(i),ft.getCapabilities().gpuTimer&&(t.requiredFeatures=[i]),t}logDeviceInfo(e){}getContext(){const e=ft.getCanvas().getContext("webgpu");if(!e)throw new Error("Couldn't create a WebGPU context");return this.canvasFormat=navigator.gpu.getPreferredCanvasFormat(),e.configure({format:this.canvasFormat,device:this.device}),lt.increment("api-calls",3),e}configVertexBuffer(e,t){e.getEncoder().setVertexBuffer(t.index,t.buffer.getId(),t.offset??0),lt.increment("api-calls",1)}configIndexBuffer(e,t){e.getEncoder().setIndexBuffer(t.getId(),"uint16"),lt.increment("api-calls",1)}async stop(){await this.device.queue.onSubmittedWorkDone(),lt.increment("api-calls",1)}release(){this.valid&&(this.context?.unconfigure(),this.device?.destroy(),lt.increment("api-calls",3),this.valid=!1)}}function N(){return ft.getContext()}function O(){return ft.getContext()}function V(){return ft.getContext()}class z{constructor(e){this.size=0,this.valid=!0,this.context=Je()?O().getId():N().getId(),this.size=this.computeSize(e),this.usage=e.usage,this.target=this.getTarget(),this.id=this.context.createBuffer(),lt.increment("api-calls",1),this.bind(),this.initializeBufferData(e),lt.increment("buffer-data",this.size)}computeSize(e){return"size"===e.type||"data-callback"===e.type?e.size:e.dataLength??e.data.byteLength}getId(){return this.id}bind(){this.context.bindBuffer(this.target,this.id),lt.increment("api-calls",1)}getSize(){return this.size}getUsage(){return this.usage}release(){this.valid&&(this.context.deleteBuffer(this.id),lt.increment("api-calls",1),lt.increment("buffer-data",-this.size),this.size=0,this.valid=!1)}}class q extends z{initializeBufferData(e){const t=e.dynamic?this.context.DYNAMIC_DRAW:this.context.STATIC_DRAW;if("size"===e.type)this.context.bufferData(this.target,e.size,t);else if("data-callback"===e.type){const i=new ArrayBuffer(this.size);e.callback(i),this.context.bufferData(this.target,i,t)}else this.context.bufferData(this.target,e.data,t,e.dataOffset??0,e.dataLength);lt.increment("api-calls",1)}getTarget(){switch(this.usage){case _.VERTEX:return this.context.ARRAY_BUFFER;case _.INDEX:return this.context.ELEMENT_ARRAY_BUFFER;case _.UNIFORM:return this.context.UNIFORM_BUFFER}}setData(e){"math"===e.type?this.setData({type:"buffer",data:b(e.data),offset:e.offset}):(this.bind(),this.context.bufferSubData(this.target,e.offset??0,e.data,e.dataOffset??0,e.dataLength),lt.increment("api-calls",1))}}class W{constructor(e){this.bindGroup=null,this.valid=!0,this.usage=e.usage,this.size=this.computeSize(e),this.buffer=this.createBuffer(e),this.initializeBufferData(e),lt.increment("api-calls",1),lt.increment("buffer-data",this.size)}computeSize(e){return"size"===e.type||"data-callback"===e.type?e.size:e.dataLength??e.data.byteLength}createBuffer(e){const t={size:this.size,usage:this.getGpuUsage(),label:e.label,mappedAtCreation:"data-callback"===e.type};return V().getDevice().createBuffer(t)}initializeBufferData(e){if("data"===e.type)this.setData({type:"buffer",data:e.data,dataOffset:e.dataOffset,dataLength:e.dataLength});else if("data-callback"===e.type){const t=this.buffer.getMappedRange();e.callback(t),this.buffer.unmap(),lt.increment("api-calls",2)}}getBindGroup(e,t){return this.bindGroup||(this.bindGroup=V().getDevice().createBindGroup({layout:e.getBindGroupLayout(t),entries:[{binding:0,resource:{buffer:this.buffer}}]}),lt.increment("api-calls",1)),this.bindGroup}getGpuUsage(){let e=GPUBufferUsage.COPY_DST;return this.usage===_.VERTEX&&(e|=GPUBufferUsage.VERTEX),this.usage===_.INDEX&&(e|=GPUBufferUsage.INDEX),this.usage===_.UNIFORM&&(e|=GPUBufferUsage.UNIFORM),e}getId(){return this.buffer}getSize(){return this.size}getUsage(){return this.usage}setData(e){"math"===e.type?this.setData({type:"buffer",data:b(e.data),offset:e.offset}):(V().getDevice().queue.writeBuffer(this.buffer,e.offset??0,e.data,e.dataOffset,e.dataLength),lt.increment("api-calls",1))}release(){this.valid&&(this.buffer.destroy(),lt.increment("buffer-data",-this.size),lt.increment("api-calls",1),this.size=0,this.valid=!1)}}class X extends z{initializeBufferData(e){const t=e.dynamic?this.context.DYNAMIC_DRAW:this.context.STATIC_DRAW;if("size"===e.type)this.context.bufferData(this.target,e.size,t);else if("data-callback"===e.type){const i=new ArrayBuffer(this.size);e.callback(i),this.context.bufferData(this.target,i,t)}else this.context.bufferData(this.target,e.data,t);lt.increment("api-calls",1)}getTarget(){switch(this.usage){case _.VERTEX:return this.context.ARRAY_BUFFER;case _.INDEX:return this.context.ELEMENT_ARRAY_BUFFER;case _.UNIFORM:throw new Error("Uniform buffers are not supported in WebGL 1")}}setData(e){"math"===e.type?this.setData({type:"buffer",data:b(e.data),offset:e.offset}):(this.bind(),this.context.bufferSubData(this.target,e.offset??0,e.data),lt.increment("api-calls",1))}}function k(e){return Ke()?new X(e):Je()?new q(e):new W(e)}!function(e){e[e.VERTEX=1]="VERTEX",e[e.INDEX=2]="INDEX",e[e.UNIFORM=4]="UNIFORM"}(_||(_={}));class Q{constructor(e,t){this.pipeline=e,this.renderpass=t}execute(){this.renderpass.getEncoder().setPipeline(this.pipeline.getId()),lt.increment("api-calls",1)}}class Y{constructor(e,t){this.descriptor=e,this.renderpass=t}execute(){V().configVertexBuffer(this.renderpass,this.descriptor)}}class H{constructor(e,t){this.indexBuffer=e,this.renderpass=t}execute(){V().configIndexBuffer(this.renderpass,this.indexBuffer)}}class ${constructor(e,t){this.descriptor=e,this.renderpass=t}execute(){const e=this.descriptor.drawConfig.getMesh();V().configVertexBuffer(this.renderpass,e.vertexBufferDescriptor),V().configIndexBuffer(this.renderpass,e.indexBufferDescriptor.buffer)}}class j{constructor(e,t,i){this.descriptor=e,this.renderpass=t,this.pipeline=i}execute(){const e=this.descriptor.value.getBindGroup(this.pipeline.getId(),this.descriptor.index);this.renderpass.getEncoder().setBindGroup(this.descriptor.index,e),lt.increment("api-calls",1)}}class K{constructor(e,t,i){this.descriptor=e,this.renderpass=t,this.pipeline=i}execute(){const e=this.descriptor.value.getBindGroup(this.pipeline.getId(),this.descriptor.index);this.renderpass.getEncoder().setBindGroup(this.descriptor.index,e),lt.increment("api-calls",1)}}class J{constructor(e,t){this.indexCount=e,this.renderpass=t}execute(){this.renderpass.getEncoder().drawIndexed(this.indexCount),lt.increment("draw-calls",1),lt.increment("api-calls",1),lt.increment("rendered-instances",1)}}class Z{constructor(e,t){this.descriptor=e,this.renderpass=t}execute(){this.renderpass.getEncoder().drawIndexed(this.descriptor.indexCount,this.descriptor.instanceCount,0,0,this.descriptor.instanceOffset),lt.increment("draw-calls",1),lt.increment("api-calls",1),lt.increment("rendered-instances",this.descriptor.instanceCount)}}class ee{constructor(e,t){this.label=e,this.renderpass=t}execute(){this.renderpass.getEncoder().pushDebugGroup(this.label),lt.increment("api-calls",1)}}class te{constructor(e){this.renderpass=e}execute(){this.renderpass.getEncoder().popDebugGroup(),lt.increment("api-calls",1)}}class ie{constructor(e,t){this.label=e,this.renderpass=t}execute(){this.renderpass.getEncoder().insertDebugMarker(this.label),lt.increment("api-calls",1)}}class se{constructor(e,t){this.commands=[],this.commandBuffer=t,this.query=e.query,this.label=e.label,this.descriptor=e}createRenderPassEncoder(e,t){const i=e.depthStencilAttachment,s={label:`${this.label} renderpass`,depthStencilAttachment:i?{view:i.texture.getId().createView(),depthLoadOp:i.clearValue?"clear":"load",depthClearValue:i.clearValue,depthStoreOp:"store"}:void 0,colorAttachments:this.getColorAttachments(e)};return ft.getCapabilities().gpuTimer&&this.query&&(s.timestampWrites={querySet:this.query.getId(),beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),lt.increment("api-calls",2),t.beginRenderPass(s)}getColorAttachments(e){return"canvas"===e.type?[{loadOp:e.clearColor?"clear":"load",clearValue:e.clearColor,storeOp:"store",view:V().getCurrentTexture().createView()}]:e.colorAttachments.map((e=>({loadOp:e.clearColor?"clear":"load",clearValue:e.clearColor,storeOp:"store",view:e.texture.getView()})))}setPipelineCommand(e){this.pipeline=e,this.commands.push(new Q(e,this))}setVertexBufferCommand(e){this.commands.push(new Y(e,this))}setDrawConfigCommand(e){this.commands.push(new $(e,this))}setIndexBufferCommand(e){this.commands.push(new H(e,this))}setUniformBufferCommand(e){const t=this.pipeline;this.commands.push(new j(e,this,t))}setUniformFloatCommand(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformVec2Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformVec3Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformVec4Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformMat2Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformMat3Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformMat4Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformTextureCommand(e){const t=this.pipeline;this.commands.push(new K(e,this,t))}drawIndexedCommand(e){this.commands.push(new J(e,this))}drawInstancedIndexedCommand(e){this.commands.push(new Z(e,this))}pushDebugGroupCommand(e){this.commands.push(new ee(e,this))}popDebugGroupCommand(){this.commands.push(new te(this))}addDebugLabelCommand(e){this.commands.push(new ie(e,this))}getEncoder(){return this.renderPassEncoder}updateQuery(){this.query?.update()}execute(){const e=this.commandBuffer.getCommandEncoder();this.renderPassEncoder=this.createRenderPassEncoder(this.descriptor,e);for(const e of this.commands)e.execute();this.commands.length=0,this.renderPassEncoder.end(),ft.getCapabilities().gpuTimer&&this.query&&this.query.resolve(e),lt.increment("api-calls",1)}release(){}}class re{constructor(e){this.renderpasses=[],this.label=e}getCommandEncoder(){return this.commandEncoder}createRenderpass(e){const t=new se(e,this);return this.renderpasses.push(t),t}execute(){this.commandEncoder=V().getDevice().createCommandEncoder({label:`${this.label} command encoder`}),lt.increment("api-calls",1);for(const e of this.renderpasses)e.execute();const e=this.commandEncoder.finish({label:this.label});if(V().getDevice().queue.submit([e]),lt.increment("api-calls",2),ft.getCapabilities().gpuTimer)for(const e of this.renderpasses)e.updateQuery()}}class ne{constructor(e){this.pipeline=e}execute(){(Je()?O().getId():N().getId()).useProgram(this.pipeline.getDescriptor().shader.getId()),lt.increment("api-calls",1)}}class ae{constructor(e){this.indexBuffer=e}execute(){(Je()?O():N()).configEbo(this.indexBuffer)}}class oe{constructor(e,t){this.descriptor=e,this.shader=t}execute(){const e=Je()?O().getId():N().getId(),t=this.shader.getUniformLocation(this.descriptor.name);this.setUniform(e,t)}}class ce extends oe{setUniform(e,t){e.uniform1f(t,this.descriptor.value),lt.increment("api-calls",1)}}class le extends oe{setUniform(e,t){e.uniform2fv(t,this.descriptor.value),lt.increment("api-calls",1)}}class he extends oe{setUniform(e,t){e.uniform3fv(t,this.descriptor.value),lt.increment("api-calls",1)}}class ue extends oe{setUniform(e,t){e.uniform4fv(t,this.descriptor.value),lt.increment("api-calls",1)}}class de extends oe{setUniform(e,t){e.uniformMatrix2fv(t,!1,this.descriptor.value),lt.increment("api-calls",1)}}class me extends oe{setUniform(e,t){e.uniformMatrix3fv(t,!1,this.descriptor.value),lt.increment("api-calls",1)}}class pe extends oe{setUniform(e,t){e.uniformMatrix4fv(t,!1,this.descriptor.value),lt.increment("api-calls",1)}}class ge extends oe{constructor(e,t){super(e,t),this.textureUnit=e.index}setUniform(e,t){e.activeTexture(e.TEXTURE0+this.textureUnit);const i=this.descriptor.value;e.bindTexture(e.TEXTURE_2D,i.getId()),e.uniform1i(t,this.textureUnit),lt.increment("api-calls",3)}}class fe{constructor(e){this.indexCount=e}execute(){const e=Je()?O().getId():N().getId();e.drawElements(e.TRIANGLES,this.indexCount,e.UNSIGNED_SHORT,0),lt.increment("draw-calls",1),lt.increment("api-calls",1),lt.increment("rendered-instances",1)}}class xe{constructor(e){this.commands=[],this.fbo=null,this.descriptor=e,this.query=e.query,"offscreen"===this.descriptor.type&&this.createFbo(this.descriptor)}createFbo(e){const t=Je()?O().getId():N().getId();this.fbo=t.createFramebuffer(),t.bindFramebuffer(t.FRAMEBUFFER,this.fbo),lt.increment("api-calls",2),this.addColorAttachments(t,e),this.addDepthAttachment(t)}addColorAttachments(e,t){for(let i=0;i<t.colorAttachments.length;i++){const s=t.colorAttachments[i];e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+i,e.TEXTURE_2D,s.texture.getId(),0)}lt.increment("api-calls",t.colorAttachments.length)}addDepthAttachment(e){this.descriptor.depthStencilAttachment&&(e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,this.descriptor.depthStencilAttachment.texture.getId(),0),lt.increment("api-calls",1))}fboStatusToString(e){if(Ke()){const t=N().getId();return this.gl1FboStatusToString(t,e)}{const t=O().getId();return e===t.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE?"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE":this.gl1FboStatusToString(t,e)}}gl1FboStatusToString(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"UNKNOWN FRAMEBUFFER STATUS"}}setPipelineCommand(e){this.pipeline=e,this.commands.push(new ne(e))}setIndexBufferCommand(e){this.commands.push(new ae(e))}setUniformFloatCommand(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new ce(e,t))}setUniformVec2Command(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new le(e,t))}setUniformVec3Command(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new he(e,t))}setUniformVec4Command(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new ue(e,t))}setUniformMat2Command(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new de(e,t))}setUniformMat3Command(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new me(e,t))}setUniformMat4Command(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new pe(e,t))}setUniformTextureCommand(e){const t=this.pipeline.getDescriptor().shader;this.commands.push(new ge(e,t))}drawIndexedCommand(e){this.commands.push(new fe(e))}pushDebugGroupCommand(){throw new Error("Debug groups are not supported in WebGL")}popDebugGroupCommand(){throw new Error("Debug groups are not supported in WebGL")}addDebugLabelCommand(){throw new Error("Debug labels are not supported in WebGL")}execute(){this.configureFbo(),ft.getCapabilities().gpuTimer&&this.query?.begin();for(const e of this.commands)e.execute();this.commands.length=0,ft.getCapabilities().gpuTimer&&(this.query?.end(),this.query?.update())}configureFbo(){const e=Je()?O().getId():N().getId(),t=ft.getCanvas();e.viewport(0,0,t.clientWidth,t.clientHeight),this.descriptor.depthStencilAttachment?e.enable(e.DEPTH_TEST):e.disable(e.DEPTH_TEST),lt.increment("api-calls",2),"canvas"===this.descriptor.type?(e.bindFramebuffer(e.FRAMEBUFFER,null),lt.increment("api-calls",1)):(e.bindFramebuffer(e.FRAMEBUFFER,this.fbo),lt.increment("api-calls",1),this.configureColorAttachments(e,this.descriptor),this.configureDepthAttachment(e))}configureColorAttachments(e,t){for(let i=0;i<t.colorAttachments.length;i++){const s=t.colorAttachments[i];if(s.clearColor){const t=s.clearColor;if(Ke())e.clearColor(t[0],t[1],t[2],t[3]),e.clear(e.COLOR_BUFFER_BIT),lt.increment("api-calls",2);else{const e=O().getId();e.clearBufferfv(e.COLOR,i,t),lt.increment("api-calls",1)}}}}configureDepthAttachment(e){this.descriptor.depthStencilAttachment?.clearValue&&(e.clearDepth(this.descriptor.depthStencilAttachment.clearValue),e.clear(e.DEPTH_BUFFER_BIT),lt.increment("api-calls",2))}release(){this.fbo&&((Je()?O().getId():N().getId()).deleteFramebuffer(this.fbo),lt.increment("api-calls",1),this.fbo=null)}}class ve{constructor(e){this.descriptor=e}execute(){N().configVbo(this.descriptor)}}class Ee{constructor(e){this.descriptor=e}execute(){if(ft.getCapabilities().vertexArray){const e=this.descriptor.drawConfig;N().getVertexArrayObjectExtension()?.bindVertexArrayOES(e.getId()),lt.increment("api-calls",1)}else{const e=this.descriptor.drawConfig.getMesh();N().configDraw(e.vertexBufferDescriptor,e.indexBufferDescriptor.buffer,this.descriptor.drawConfig.getInstanceData())}}}class be{constructor(e){this.descriptor=e}execute(){const e=N().getId();N().getInstancedRenderingExtension().drawElementsInstancedANGLE(e.TRIANGLES,this.descriptor.indexCount,e.UNSIGNED_SHORT,0,this.descriptor.instanceCount),ft.getCapabilities().vertexArray&&(N().getVertexArrayObjectExtension().bindVertexArrayOES(null),lt.increment("api-calls",1)),lt.increment("draw-calls",1),lt.increment("api-calls",1),lt.increment("rendered-instances",this.descriptor.instanceCount)}}class Ce extends xe{setVertexBufferCommand(e){this.commands.push(new ve(e))}setDrawConfigCommand(e){this.commands.push(new Ee(e))}setUniformBufferCommand(){throw new Error("Uniform buffers are not supported in WebGL 1")}drawInstancedIndexedCommand(e){this.commands.push(new be(e))}}class Te{constructor(e){this.descriptor=e}execute(){O().configVbo(this.descriptor)}}class we{constructor(e){this.descriptor=e}execute(){const e=this.descriptor.drawConfig;O().getId().bindVertexArray(e.getId()),lt.increment("api-calls",1)}}class De{constructor(e,t){this.descriptor=e,this.shader=t}execute(){const e=O().getId(),t=this.descriptor.value,i=this.shader,s=i.getUniformBlockIndex(this.descriptor.name);e.uniformBlockBinding(i.getId(),s,this.descriptor.index),e.bindBufferBase(e.UNIFORM_BUFFER,this.descriptor.index,t.getId()),lt.increment("api-calls",2)}}class ye{constructor(e){this.descriptor=e}execute(){const e=O().getId();e.drawElementsInstanced(e.TRIANGLES,this.descriptor.indexCount,e.UNSIGNED_SHORT,0,this.descriptor.instanceCount),e.bindVertexArray(null),lt.increment("draw-calls",1),lt.increment("api-calls",2),lt.increment("rendered-instances",this.descriptor.instanceCount)}}class Ie extends xe{setVertexBufferCommand(e){this.commands.push(new Te(e))}setDrawConfigCommand(e){this.commands.push(new we(e))}setUniformBufferCommand(e){this.commands.push(new De(e,this.pipeline.getDescriptor().shader))}drawInstancedIndexedCommand(e){this.commands.push(new ye(e))}}class Ae{constructor(){this.renderpasses=[]}createRenderpass(e){const t=this.createGlRenderpass(e);return this.renderpasses.push(t),t}createGlRenderpass(e){return Ke()?new Ce(e):new Ie(e)}execute(){for(const e of this.renderpasses)e.execute()}}class Se{static get(e){const t=Se.shaders.get(e);if(!t)throw new Error(`Couldn't find shader ${e}`);return t}}Se.shaders=new Map,Se.shaders.set("gl-vertex-lambertian","#if __VERSION__ == 100\r\n attribute vec3 vertexPosition; attribute vec3 vertexNormal; attribute mat4 M; attribute vec3 color; varying vec3 vf_normal; varying vec3 vf_color; uniform mat4 VP;\r\n#else\r\n layout(location = 0) in vec3 vertexPosition; layout(location = 1) in vec3 vertexNormal; layout(location = 3) in mat4 M; layout(location = 7) in vec3 color; out vec3 vf_normal; out vec3 vf_color; layout(std140) uniform FrameData { mat4 VP; vec3 light; };\r\n#endif\r\nvoid main() { vf_normal = vertexNormal; vf_color = color; gl_Position = VP * M * vec4(vertexPosition, 1.0);}"),Se.shaders.set("gl-fragment-lambertian","precision highp float;\r\n#if __VERSION__ == 100\r\n varying vec3 vf_normal; varying vec3 vf_color; uniform vec3 light;\r\n#else\r\n in vec3 vf_normal; in vec3 vf_color; layout(location = 0) out vec4 color; layout(std140) uniform FrameData { mat4 VP; vec3 light; };\r\n#endif\r\nvoid main() { vec3 N = normalize(vf_normal); vec3 L = light; vec3 result = vf_color * dot(N, -L);\r\n #if __VERSION__ == 100\r\n gl_FragColor = vec4(result, 1.0);\r\n #else\r\n color = vec4(result, 1.0);\r\n #endif\r\n}"),Se.shaders.set("gl-vertex-quad","#if __VERSION__ == 100\r\n attribute vec3 vertexPosition; attribute vec2 vertexTextureCoordinate; varying vec2 vf_vertexTextureCoordinate;\r\n#else\r\n layout(location = 0) in vec3 vertexPosition; layout(location = 2) in vec2 vertexTextureCoordinate; out vec2 vf_vertexTextureCoordinate;\r\n#endif\r\nvoid main() { vf_vertexTextureCoordinate = vertexTextureCoordinate; gl_Position = vec4(vertexPosition, 1.0);}"),Se.shaders.set("gl-fragment-quad","precision highp float;\r\n#if __VERSION__ == 100\r\n varying vec2 vf_vertexTextureCoordinate;\r\n#else\r\n in vec2 vf_vertexTextureCoordinate; layout(location = 0) out vec4 color;\r\n#endif\r\nuniform sampler2D image;void main() {\r\n #if __VERSION__ == 100\r\n gl_FragColor = texture2D(image, vf_vertexTextureCoordinate);\r\n #else\r\n color = texture(image, vf_vertexTextureCoordinate);\r\n #endif\r\n}"),Se.shaders.set("gpu-lambertian","struct FrameData{VP:mat4x4f,light:vec3f};@group(0)@binding(0)var<uniform>frameData:FrameData;struct Vertex{@location(0)vertexPosition:vec3f,@location(1)vertexNormal:vec3f,@location(3)M1:vec4f,@location(4)M2:vec4f,@location(5)M3:vec4f,@location(6)M4:vec4f,@location(7)color:vec3f};struct Varying{@builtin(position)position:vec4f,@location(0)normal:vec3f,@location(1)color:vec3f};@vertex fn vertex(vertex:Vertex)->Varying{var vf_varying:Varying;let M=mat4x4f(vertex.M1,vertex.M2,vertex.M3,vertex.M4);vf_varying.position=frameData.VP*M*vec4f(vertex.vertexPosition,1.0);vf_varying.normal=vertex.vertexNormal;vf_varying.color=vertex.color;return vf_varying;}@fragment fn fragment(vf_varying:Varying)->@location(0)vec4f{let N=normalize(vf_varying.normal);let L=frameData.light;return vec4f(vf_varying.color*dot(N,-L),1.0);}"),Se.shaders.set("gpu-quad","struct Vertex{@location(0)vertexPosition:vec3f,@location(2)vertexTextureCoordinate:vec2f,};struct Varying{@builtin(position)position:vec4f,@location(0)textureCoordinate:vec2f};@vertex fn vertex(vertex:Vertex)->Varying{var vf_varying:Varying;vf_varying.position=vec4f(vertex.vertexPosition,1.0);vf_varying.textureCoordinate=vertex.vertexTextureCoordinate;return vf_varying;}@group(0)@binding(0)var quadSampler:sampler;@group(0)@binding(1)var quadTexture:texture_2d<f32>;@fragment fn fragment(vf_varying:Varying)->@location(0)vec4f{return textureSample(quadTexture,quadSampler,vf_varying.textureCoordinate);}");class _e{constructor(e){this.uniformLocations=new Map,this.valid=!0,this.context=Je()?O().getId():N().getId();const t=this.getShader(this.context.VERTEX_SHADER,Se.get(`gl-vertex-${e.name}`)),i=this.getShader(this.context.FRAGMENT_SHADER,Se.get(`gl-fragment-${e.name}`));this.program=this.context.createProgram(),this.setAttributeLocations(),this.context.attachShader(this.program,t),this.context.attachShader(this.program,i),this.context.linkProgram(this.program),this.context.deleteShader(t),this.context.deleteShader(i),lt.increment("api-calls",6)}getId(){return this.program}getShader(e,t){const i=this.getShaderHeader()+t,s=this.context.createShader(e);return this.context.shaderSource(s,i),this.context.compileShader(s),lt.increment("api-calls",3),s}getUniformLocation(e){let t=this.uniformLocations.get(e);return t||(t=this.context.getUniformLocation(this.program,e)??void 0,lt.increment("api-calls",1),this.uniformLocations.set(e,t)),t}release(){this.valid&&(this.context.deleteProgram(this.program),lt.increment("api-calls",1),this.valid=!1)}}class Me extends _e{getShaderHeader(){return""}setAttributeLocations(){const e=N().getId();e.bindAttribLocation(this.program,0,"vertexPosition"),e.bindAttribLocation(this.program,1,"vertexNormal"),e.bindAttribLocation(this.program,2,"vertexTextureCoordinate"),e.bindAttribLocation(this.program,3,"M"),e.bindAttribLocation(this.program,7,"color"),lt.increment("api-calls",5)}}class Fe extends _e{constructor(){super(...arguments),this.uniformBlockIndices=new Map}getShaderHeader(){return"#version 300 es\n"}setAttributeLocations(){}getUniformBlockIndex(e){const t=O().getId();let i=this.uniformBlockIndices.get(e);return null==i&&(i=t.getUniformBlockIndex(this.program,e),lt.increment("api-calls",1),this.uniformBlockIndices.set(e,i)),i}}class Re{constructor(e){this.shaderModule=V().getDevice().createShaderModule({code:Se.get(`gpu-${e.name}`),label:e.label}),lt.increment("api-calls",1)}getId(){return this.shaderModule}async logCompilationInfo(){}getShaderModule(){return this.shaderModule}release(){}}function Be(e){return Ke()?new Me(e):Je()?new Fe(e):new Re(e)}class Pe{constructor(e){this.inProgress=!1,this.valid=!0,this.handler=e.handler}update(){if(this.inProgress&&this.isResultAvailable()){if(this.isResultValid()){const e=this.getResult();this.handler(w(e))}this.inProgress=!1}}}class Ue extends Pe{constructor(e){super(e),this.gpuTimeExtension=N().getGpuTimeExtension(),this.query=this.gpuTimeExtension.createQueryEXT(),lt.increment("api-calls",1)}getId(){return this.query}begin(){this.inProgress||(this.gpuTimeExtension.beginQueryEXT(this.gpuTimeExtension.TIME_ELAPSED_EXT,this.query),lt.increment("api-calls",1))}end(){this.inProgress||(this.gpuTimeExtension.endQueryEXT(this.gpuTimeExtension.TIME_ELAPSED_EXT),N().getId().flush(),lt.increment("api-calls",2),this.inProgress=!0)}isResultAvailable(){return lt.increment("api-calls",1),this.gpuTimeExtension.getQueryObjectEXT(this.query,this.gpuTimeExtension.QUERY_RESULT_AVAILABLE_EXT)}isResultValid(){return lt.increment("api-calls",1),!N().getId().getParameter(this.gpuTimeExtension.GPU_DISJOINT_EXT)}getResult(){return lt.increment("api-calls",1),this.gpuTimeExtension.getQueryObjectEXT(this.query,this.gpuTimeExtension.QUERY_RESULT_EXT)}release(){this.valid&&(this.gpuTimeExtension.deleteQueryEXT(this.query),lt.increment("api-calls",1),this.valid=!1)}}class Le extends Pe{constructor(e){super(e),this.context=O().getId(),this.query=this.context.createQuery(),lt.increment("api-calls",1)}getId(){return this.query}begin(){this.inProgress||(this.context.beginQuery(O().getGpuTimeExtension().TIME_ELAPSED_EXT,this.query),lt.increment("api-calls",1))}end(){this.inProgress||(this.context.endQuery(O().getGpuTimeExtension().TIME_ELAPSED_EXT),this.context.flush(),lt.increment("api-calls",2),this.inProgress=!0)}isResultAvailable(){return lt.increment("api-calls",1),this.context.getQueryParameter(this.query,this.context.QUERY_RESULT_AVAILABLE)}isResultValid(){return lt.increment("api-calls",1),!this.context.getParameter(O().getGpuTimeExtension().GPU_DISJOINT_EXT)}getResult(){return lt.increment("api-calls",1),this.context.getQueryParameter(this.query,this.context.QUERY_RESULT)}release(){this.valid&&(this.context.deleteQuery(this.query),lt.increment("api-calls",1),this.valid=!1)}}class Ge{constructor(e){this.valid=!0,this.querySet=V().getDevice().createQuerySet({label:e.label,count:2,type:"timestamp"}),this.resolveQueryBufer=V().getDevice().createBuffer({label:"resolve query buffer",size:8*Ge.TIMESTAMP_COUNT,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultQueryBuffer=V().getDevice().createBuffer({label:"result query buffer",size:8*Ge.TIMESTAMP_COUNT,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),lt.increment("api-calls",3),lt.increment("buffer-data",16*Ge.TIMESTAMP_COUNT),this.handler=e.handler}getId(){return this.querySet}resolve(e){e.resolveQuerySet(this.querySet,0,2,this.resolveQueryBufer,0),lt.increment("api-calls",1),"unmapped"===this.resultQueryBuffer.mapState&&(e.copyBufferToBuffer(this.resolveQueryBufer,0,this.resultQueryBuffer,0,this.resultQueryBuffer.size),lt.increment("api-calls",1))}update(){"unmapped"===this.resultQueryBuffer.mapState&&(this.resultQueryBuffer.mapAsync(GPUMapMode.READ).then((()=>{const e=new BigInt64Array(this.resultQueryBuffer.getMappedRange()),t=w(Number(e[0])),i=w(Number(e[1]));this.handler(i-t),this.resultQueryBuffer.unmap(),lt.increment("api-calls",2)})),lt.increment("api-calls",1))}release(){this.valid&&(this.querySet.destroy(),this.resolveQueryBufer.destroy(),this.resultQueryBuffer.destroy(),lt.increment("buffer-data",-16*Ge.TIMESTAMP_COUNT),lt.increment("api-calls",3),this.valid=!1)}}Ge.TIMESTAMP_COUNT=2;class Ne{constructor(e){this.vao=null,this.valid=!0,this.descriptor=e;const t=N();if(this.extension=t.getVertexArrayObjectExtension(),ft.getCapabilities().vertexArray&&this.extension){this.vao=this.extension.createVertexArrayOES(),this.extension.bindVertexArrayOES(this.vao);const t=e.mesh;N().configDraw(t.vertexBufferDescriptor,t.indexBufferDescriptor.buffer,e.instanceData),this.extension.bindVertexArrayOES(null),lt.increment("api-calls",3)}}getId(){return this.vao}getMesh(){return this.descriptor.mesh}getInstanceData(){return this.descriptor.instanceData}release(){this.valid&&this.vao&&(this.extension?.deleteVertexArrayOES(this.vao),lt.increment("api-calls",1),this.valid=!1)}}class Oe{constructor(e){this.valid=!0,this.descriptor=e,this.context=O().getId(),this.vao=this.context.createVertexArray(),this.context.bindVertexArray(this.vao);const t=e.mesh;O().configDraw(t.vertexBufferDescriptor,t.indexBufferDescriptor.buffer,e.instanceData),this.context.bindVertexArray(null),lt.increment("api-calls",3)}getId(){return this.vao}getMesh(){return this.descriptor.mesh}getInstanceData(){return this.descriptor.instanceData}release(){this.valid&&(this.context.deleteVertexArray(this.vao),lt.increment("api-calls",1),this.valid=!1)}}class Ve{constructor(e){this.descriptor=e}getId(){return null}getMesh(){return this.descriptor.mesh}getInstanceData(){return this.descriptor.instanceData}release(){}}function ze(e){return Ke()?new Ne(e):Je()?new Oe(e):new Ve(e)}const qe={stride:32,isInstanced:!1,attributes:[{index:0,offset:0,format:S.FLOAT_3},{index:1,offset:12,format:S.FLOAT_3},{index:2,offset:24,format:S.FLOAT_2}]},We={stride:76,isInstanced:!0,attributes:[{index:3,offset:0,format:S.FLOAT_4},{index:4,offset:16,format:S.FLOAT_4},{index:5,offset:32,format:S.FLOAT_4},{index:6,offset:48,format:S.FLOAT_4},{index:7,offset:64,format:S.FLOAT_3}]};class Xe{static updateMaxCellDistance(){const e=ct.getCellSize()/2,t=e*e;Xe.maxCellDistance=Math.sqrt(t+t)}static getMaxCellDistance(){return Xe.maxCellDistance}constructor(e,t,i,s){this.x=0,this.z=0,this.entities=[],this.drawConfigs=[],this.entityCount=0,this.valid=!1,this.instanceCount=0,this.vertexCount=0,this.triangleCount=0,this.cornerPoints=[],this.aabbMin=r(),this.aabbMax=r(),this.initialize(e,t,i,s)}initialize(e,t,i,s){if(this.x=i,this.z=s,this.entityCount=e.length,this.entities=e,this.instanceBuffer=this.createInstanceBuffer(t),this.createDrawConfigs(t),this.valid=!0,this.instanceCount=e.length,lt.increment("instances",e.length),Xe.updateMaxCellDistance(),!this.cornerPoints.length)for(let e=0;e<8;e++)this.cornerPoints.push(d())}createDrawConfigs(e){this.vertexCount=0,this.triangleCount=0;let t=0;for(const e of this.drawConfigs)e.release();this.drawConfigs.length=0;for(const i of e){const e=this.entities.filter((e=>e.mesh===i.name)).length;if(e){const s=ze({mesh:i,instanceData:{buffer:this.instanceBuffer,index:1,vertexCount:e,offset:19*t*4,layout:We}});this.drawConfigs.push(s),this.vertexCount+=i.vertexBufferDescriptor.vertexCount*e,this.triangleCount+=i.indexBufferDescriptor.indexCount/3*e,t+=e}}lt.increment("vertices",this.vertexCount),lt.increment("triangles",this.triangleCount)}getX(){return this.x}getZ(){return this.z}isValid(){return this.valid}createInstanceBuffer(e){return k({type:"data-callback",size:19*this.entityCount*4,callback:t=>{const i=new Float32Array(t);let s=0;for(const t of e){const e=this.entities.filter((e=>e.mesh===t.name));e.length&&(this.addInstanceData(i,e,s),s+=e.length)}},usage:_.VERTEX})}addInstanceData(e,t,i){for(let s=0;s<t.length;s++){const r=t[s],n=19*(s+i);u(Xe.M,g(Xe.q,r.rotation[0],r.rotation[1],r.rotation[2]),r.position,r.scale),e.set(Xe.M,n),e.set(r.color,n+16)}}render(e){if(ct.isFrustumCulling()&&!this.isInFrustum())return;lt.increment("rendered-cells",1);let t=0;const i=ft.getCapabilities().instanceOffset;i&&e.setVertexBufferCommand({buffer:this.instanceBuffer,index:1,vertexCount:this.entities.length,layout:We});for(const s of this.drawConfigs){const r=s.getInstanceData()?.vertexCount??1;e.setDrawConfigCommand({drawConfig:s});const n=i?t:0;e.drawInstancedIndexedCommand({indexCount:s.getMesh().indexBufferDescriptor.indexCount,instanceCount:r,instanceOffset:n}),lt.increment("rendered-vertices",s.getMesh().vertexBufferDescriptor.vertexCount*r),lt.increment("rendered-triangles",s.getMesh().indexBufferDescriptor.indexCount/3*r),t+=r}}isInFrustum(){return this.computeCornerPointsInNdc(),this.computeAabbMin(),this.computeAabbMax(),this.aabbMin[0]<=1&&this.aabbMin[1]<=1&&this.aabbMin[2]<=1&&this.aabbMax[0]>=-1&&this.aabbMax[1]>=-1&&this.aabbMax[2]>=-1}computeCornerPointsInNdc(){const e=ct.getCellSize()/2;this.worldSpaceToNdc(m(this.cornerPoints[0],this.x-e,0,this.z+e,1)),this.worldSpaceToNdc(m(this.cornerPoints[1],this.x-e,e,this.z+e,1)),this.worldSpaceToNdc(m(this.cornerPoints[2],this.x+e,e,this.z+e,1)),this.worldSpaceToNdc(m(this.cornerPoints[3],this.x+e,0,this.z+e,1)),this.worldSpaceToNdc(m(this.cornerPoints[4],this.x-e,0,this.z-e,1)),this.worldSpaceToNdc(m(this.cornerPoints[5],this.x-e,e,this.z-e,1)),this.worldSpaceToNdc(m(this.cornerPoints[6],this.x+e,e,this.z-e,1)),this.worldSpaceToNdc(m(this.cornerPoints[7],this.x+e,0,this.z-e,1))}computeAabbMin(){a(this.aabbMin,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY);for(const e of this.cornerPoints)this.aabbMin[0]=Math.min(this.aabbMin[0],e[0]),this.aabbMin[1]=Math.min(this.aabbMin[1],e[1]),this.aabbMin[2]=Math.min(this.aabbMin[2],e[2])}computeAabbMax(){a(this.aabbMax,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY);for(const e of this.cornerPoints)this.aabbMax[0]=Math.max(this.aabbMax[0],e[0]),this.aabbMax[1]=Math.max(this.aabbMax[1],e[1]),this.aabbMax[2]=Math.max(this.aabbMax[2],e[2])}worldSpaceToNdc(e){return function(e,t,i){var s=t[0],r=t[1],n=t[2],a=t[3];e[0]=i[0]*s+i[4]*r+i[8]*n+i[12]*a,e[1]=i[1]*s+i[5]*r+i[9]*n+i[13]*a,e[2]=i[2]*s+i[6]*r+i[10]*n+i[14]*a,e[3]=i[3]*s+i[7]*r+i[11]*n+i[15]*a}(e,e,pt.getVP()),function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e}(e,e,1/Math.abs(e[3]))}reset(e){this.instanceBuffer.release(),this.instanceBuffer=this.createInstanceBuffer(e),this.createDrawConfigs(e),Xe.updateMaxCellDistance()}release(){if(this.valid){this.instanceBuffer.release(),lt.increment("instances",-this.instanceCount),lt.increment("vertices",-this.vertexCount),lt.increment("triangles",-this.triangleCount);for(const e of this.entities)y(e.position),y(e.rotation),y(e.scale);for(const e of this.drawConfigs){const t=this.entities.find((t=>t.mesh===e.getMesh().name));t&&y(t.color),e.release()}this.drawConfigs.length=0,this.valid=!1}}}Xe.M=h(),Xe.q=p(),Xe.maxCellDistance=0;class ke{constructor(e){this.size=0,this.valid=!0,this.context=Je()?O().getId():N().getId(),this.id=this.context.createTexture(),this.context.bindTexture(this.context.TEXTURE_2D,this.id),this.context.texImage2D(this.context.TEXTURE_2D,0,this.getInternalFormat(e),e.width,e.height,0,this.getFormat(e),this.getType(e),e.data??null),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.NEAREST),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MAG_FILTER,this.context.NEAREST),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.size=e.width*e.height*4,lt.increment("texture-data",this.size),lt.increment("api-calls",7)}getId(){return this.id}getFormat(e){switch(e.format){case"rgba8":return this.context.RGBA;case"depth":return this.context.DEPTH_COMPONENT}}release(){this.valid&&(this.context.deleteTexture(this.id),lt.increment("texture-data",-this.size),lt.increment("api-calls",1),this.valid=!1)}}class Qe extends ke{getInternalFormat(e){switch(e.format){case"rgba8":return this.context.RGBA;case"depth":return this.context.DEPTH_COMPONENT}}getType(e){switch(e.format){case"rgba8":return this.context.UNSIGNED_BYTE;case"depth":return this.context.UNSIGNED_INT}}}class Ye extends ke{constructor(e){super(e),this.context=O().getId()}getInternalFormat(e){switch(e.format){case"rgba8":return this.context.RGBA8;case"depth":return this.context.DEPTH_COMPONENT32F}}getType(e){switch(e.format){case"rgba8":return this.context.UNSIGNED_BYTE;case"depth":return this.context.FLOAT}}}class He{constructor(e){this.size=0,this.valid=!0,this.id=V().getDevice().createTexture({dimension:"2d",format:this.getFormat(e),usage:this.getUsage(e),size:{width:e.width,height:e.height},label:e.label}),this.sampler=V().getDevice().createSampler({label:e.label,minFilter:"nearest",magFilter:"nearest",mipmapFilter:"nearest",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge"}),this.size=e.width*e.height*4,lt.increment("texture-data",this.size),lt.increment("api-calls",2)}getUsage(e){let t=0;return e.rendered&&(t|=GPUTextureUsage.RENDER_ATTACHMENT),e.sampled&&(t|=GPUTextureUsage.TEXTURE_BINDING),t}getId(){return this.id}getSampler(){return this.sampler}getBindGroup(e,t){return this.bindGroup||(this.bindGroup=V().getDevice().createBindGroup({layout:e.getBindGroupLayout(t),entries:[{binding:0,resource:this.sampler},{binding:1,resource:this.getView()}]}),lt.increment("api-calls",1)),this.bindGroup}getFormat(e){switch(e.format){case"rgba8":return"rgba8unorm";case"depth":return"depth32float"}}getView(){return this.view||(this.view=this.id.createView(),lt.increment("api-calls",1)),this.view}release(){this.valid&&(this.id.destroy(),lt.increment("texture-data",-this.size),lt.increment("api-calls",1),this.valid=!1)}}function $e(e){return Ke()?new Qe(e):Je()?new Ye(e):new He(e)}var je;function Ke(){return ft.getRenderingApi()===je.WEBGL_1}function Je(){return ft.getRenderingApi()===je.WEBGL_2}!function(e){e[e.WEBGL_1=1]="WEBGL_1",e[e.WEBGL_2=2]="WEBGL_2",e[e.WEBGPU=3]="WEBGPU"}(je||(je={}));class Ze{constructor(){this.restarted=!1,this.vertexBuffers=[],this.indexBuffers=[],this.meshes=[],this.lightDirection=r(),this.cells=[],this.cellsPool=[],this.capabilities={gpuTimer:!1,uniformBuffer:!1,instancedRendering:!1,isNdcCube:!0,debugGroups:!1,instanceOffset:!1,depthTexture:!1,uvUp:!0,vertexArray:!1}}getRenderingApi(){return this.renderingApi}getCapabilities(){return this.capabilities}getCanvas(){return this.canvas}getContext(){return this.context}async initialize(e){this.createCell=e,await this.initializeWithApi()}getApiList(){switch(ct.getRenderingApi()){case A.WEBGPU:return[je.WEBGPU];case A.WEBGL_2:return[je.WEBGL_2];case A.WEBGL_1:return[je.WEBGL_1];default:return[je.WEBGPU,je.WEBGL_2,je.WEBGL_1]}}async initializeWithApi(e=this.getApiList()){this.canvas=this.getCanvasElement();for(const t of e)try{this.renderingApi=t,await this.createResources();for(const e of this.cells)e.reset(this.meshes);return}catch(e){continue}throw new Error("No rendering API is available")}async createResources(){if(this.context=await async function(){if(Ke()){const e=new U;return e.initialize(),e}if(Je()){const e=new L;return e.initialize(),e}{const e=new G;return await e.initialize(),e}}(),!this.capabilities.instancedRendering)throw new Error("Instanced rendering is not supported");if(!this.capabilities.depthTexture)throw new Error("Depth textures are not supported");const e=this.createLambertianPipeline(),t=this.createQuadPipeline();this.createQuery(),this.createMeshes(),this.createUniformBuffer(),this.recreateRenderpassAttachments(),this.createCanvasDrawConfig(),this.lambertianPipeline=await e,this.quadPipeline=await t}createCanvasDrawConfig(){const e=this.meshes.find((e=>"quad"===e.name));if(!e)throw new Error("Couldn't find quad mesh");this.canvasDrawConfig=ze({mesh:e})}getCanvasElement(){const e=document.querySelector("canvas");if(!e)throw new Error("Couldn't find the canvas element");return e}addMesh(e,t,i,s,r){this.vertexBuffers.push(t),this.indexBuffers.push(i);const n={name:e,vertexBufferDescriptor:{buffer:t,index:0,vertexCount:s,layout:qe},indexBufferDescriptor:{buffer:i,indexCount:r}};this.meshes.push(n)}async createLambertianPipeline(){return B({label:"lambertian pipeline",shader:Be({name:"lambertian",label:"lambertian shader"}),vertexBuffers:[qe,We],attachmentFormats:["rgba8"],depthAttachment:!0})}async createQuadPipeline(){return B({label:"quad pipeline",shader:Be({name:"quad",label:"quad shader"}),vertexBuffers:[qe],attachmentFormats:["canvas"]})}createQuery(){var e;this.capabilities.gpuTimer&&(this.query=(e={label:"gpu timer query",handler:e=>{ot.addElapsedGpuTime(e)}},Ke()?new Ue(e):Je()?new Le(e):new Ge(e)))}createMeshes(){!function(){const e=ft.getCapabilities().uvUp,t=e?1:0,i=e?0:1,s=k({type:"data-callback",callback:e=>{new Float32Array(e).set([-1,1,0,0,0,1,0,t,-1,-1,0,0,0,1,0,i,1,-1,0,0,0,1,1,i,1,1,0,0,0,1,1,t])},size:128,usage:_.VERTEX,label:"Quad vertex buffer"}),r=k({type:"data-callback",callback:e=>{new Uint16Array(e).set([0,1,2,3,0,2])},size:12,usage:_.INDEX,label:"Quad index buffer"});ft.addMesh("quad",s,r,4,6)}(),function(){const e=k({type:"data-callback",callback:e=>{new Float32Array(e).set([-.5,.5,.5,0,0,1,0,0,-.5,-.5,.5,0,0,1,0,0,.5,-.5,.5,0,0,1,0,0,.5,.5,.5,0,0,1,0,0,-.5,.5,-.5,-1,0,0,0,0,-.5,-.5,-.5,-1,0,0,0,0,-.5,-.5,.5,-1,0,0,0,0,-.5,.5,.5,-1,0,0,0,0,.5,.5,.5,1,0,0,0,0,.5,-.5,.5,1,0,0,0,0,.5,-.5,-.5,1,0,0,0,0,.5,.5,-.5,1,0,0,0,0,.5,.5,-.5,0,0,-1,0,0,.5,-.5,-.5,0,0,-1,0,0,-.5,-.5,-.5,0,0,-1,0,0,-.5,.5,-.5,0,0,-1,0,0,-.5,.5,-.5,0,1,0,0,0,-.5,.5,.5,0,1,0,0,0,.5,.5,.5,0,1,0,0,0,.5,.5,-.5,0,1,0,0,0,-.5,-.5,.5,0,-1,0,0,0,-.5,-.5,-.5,0,-1,0,0,0,.5,-.5,-.5,0,-1,0,0,0,.5,-.5,.5,0,-1,0,0,0])},size:768,usage:_.VERTEX,label:"Cube vertex buffer"}),t=k({type:"data-callback",callback:e=>{new Uint16Array(e).set([0,1,2,3,0,2,4,5,6,7,4,6,8,9,10,11,8,10,12,13,14,15,12,14,16,17,18,19,16,18,20,21,22,23,20,22])},size:72,usage:_.INDEX,label:"Cube index buffer"});ft.addMesh("cube",e,t,24,36)}(),lt.set("meshes",this.meshes.length)}createUniformBuffer(){if(this.capabilities.uniformBuffer){const e=4;this.uniformBuffer=k({type:"size",size:76+e,usage:_.UNIFORM,dynamic:!0})}this.uniformBufferData=new Float32Array(20)}async render(){this.clearPerFrameStatistics(),this.restarted&&await this.handleRestart(),this.handleResize(),this.renderScene(),this.renderToCanvas(),this.commandBuffer.execute()}renderScene(){this.lambertianRenderpass.setPipelineCommand(this.lambertianPipeline),this.updateCells(this.lambertianRenderpass),this.updateUniforms(this.lambertianRenderpass),this.renderCells(this.lambertianRenderpass)}renderToCanvas(){const e=this.meshes.find((e=>"quad"===e.name));if(!e)throw new Error("Couldn't find quad mesh");this.quadRenderpass.setPipelineCommand(this.quadPipeline),this.quadRenderpass.setDrawConfigCommand({drawConfig:this.canvasDrawConfig}),this.quadRenderpass.setUniformTextureCommand({name:"image",value:this.color,index:0}),this.quadRenderpass.drawIndexedCommand(e.indexBufferDescriptor.indexCount)}async handleRestart(){await this.release();const e=this.canvas.cloneNode(!1);this.canvas.replaceWith(e),this.canvas=e,await this.initializeWithApi(),this.restarted=!1}handleResize(){this.canvas.width===window.innerWidth&&this.canvas.height===window.innerHeight||(this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,dt.update(),pt.invalidate(),this.recreateRenderpassAttachments())}recreateRenderpassAttachments(){this.color&&this.color.release(),this.depth&&this.depth.release(),this.color=$e({type:"2d",format:"rgba8",width:this.canvas.clientWidth,height:this.canvas.clientHeight,rendered:!0,sampled:!0,label:"color buffer"}),this.depth=$e({type:"2d",format:"depth",width:this.canvas.clientWidth,height:this.canvas.clientHeight,rendered:!0,label:"depth buffer"}),this.lambertianRenderpass&&this.lambertianRenderpass.release(),this.quadRenderpass&&this.quadRenderpass.release(),this.commandBuffer=("default command buffer",Ke()||Je()?new Ae:new re("default command buffer")),this.lambertianRenderpass=this.commandBuffer.createRenderpass({type:"offscreen",colorAttachments:[{texture:this.color,clearColor:[.7,.8,1,1]}],depthStencilAttachment:{texture:this.depth,clearValue:1},label:"lambertian renderpass",query:this.query}),this.quadRenderpass=this.commandBuffer.createRenderpass({type:"canvas",label:"canvas renderpass"})}updateCells(e){this.removeCells(),this.addCells()}removeCells(){this.cells.filter((e=>!this.isCellInRange(e.getX(),e.getZ()))).forEach((e=>{e.release(),this.cellsPool.push(e)})),this.cells=this.cells.filter((e=>e.isValid()))}addCells(){const e=ct.getCellSize(),t=pt.getPosition(),i=Math.round(t[0]/e)*e,s=Math.round(t[2]/e)*e,r=I.getMaxFrustumDistance(),n=Math.round(r/e)+2;let a=0;for(let t=-n;t<=n;t++)for(let r=-n;r<=n;r++){const n=i+r*e,o=s+t*e,c=this.isCellInRange(n,o);if(this.cells.every((e=>e.getX()!==n||e.getZ()!==o))&&c){const e=this.getCell(n,o);this.cells.push(e)}this.updateCellsDebugger(a,r,t,n,o,c),a++}}getCell(e,t){if(this.cellsPool.length){const i=this.cellsPool.pop();return i.initialize(this.createCell(e,t),this.meshes,e,t),i}return new Xe(this.createCell(e,t),this.meshes,e,t)}updateCellsDebugger(e,t,i,s,r,n){if(ct.isCellsDebugger()){if(n){const t=this.cells.find((e=>e.getX()===s&&e.getZ()===r));t&&(ct.isFrustumCulling()&&t.isInFrustum()?dt.setCellState(e,"in-frustum"):dt.setCellState(e,"in-range"))}else dt.setCellState(e,"out-of-range");0===t&&0===i&&dt.setCellState(e,"camera")}}renderCells(e){lt.set("cells",this.cells.length);for(const t of this.cells)t.render(e)}clearPerFrameStatistics(){lt.set("api-calls",0),lt.set("draw-calls",0),lt.set("rendered-cells",0),lt.set("rendered-instances",0),lt.set("rendered-vertices",0),lt.set("rendered-triangles",0)}updateUniforms(e){l(this.lightDirection,a(this.lightDirection,-1,-2,-3)),this.capabilities.uniformBuffer?(this.uniformBufferData.set(pt.getVP(),0),this.uniformBufferData.set(this.lightDirection,16),this.uniformBuffer.setData({type:"buffer",data:this.uniformBufferData}),e.setUniformBufferCommand({index:0,name:"FrameData",value:this.uniformBuffer})):(e.setUniformMat4Command({name:"VP",value:pt.getVP()}),e.setUniformVec3Command({name:"light",value:this.lightDirection}))}isCellInRange(e,t){const i=I.getMaxFrustumDistance(),s=Xe.getMaxCellDistance(),r=pt.getPosition(),n=e-r[0],a=t-r[2];return Math.sqrt(n*n+a*a)<=i+s}restart(){this.restarted=!0}removeAllCells(){for(const e of this.cells)e.release();this.cells.length=0}async release(){await this.context.stop(),this.capabilities.gpuTimer&&this.query?.release(),this.meshes.length=0;for(const e of this.vertexBuffers)e.release();this.vertexBuffers.length=0;for(const e of this.indexBuffers)e.release();this.canvasDrawConfig.release(),this.indexBuffers.length=0,this.uniformBuffer?.release(),this.lambertianRenderpass.release(),this.quadRenderpass.release(),this.depth?.release(),this.color?.release(),this.quadPipeline.getDescriptor().shader.release(),this.lambertianPipeline.getDescriptor().shader.release(),this.context.release()}}class et{constructor(){this.showingStatistics=!1,this.statisticsElement=C("#statistics"),this.renderingApiElement=C("#rendering-api"),this.fpsFrameTimeElement=C("#fps-frame-time"),this.cpuTimeElement=C("#cpu-time"),this.gpuTimeElement=C("#gpu-time"),this.apiCallsElement=C("#api-calls"),this.drawCallsElement=C("#draw-calls"),this.bufferDataElement=C("#buffer-data"),this.textureDataElement=C("#texture-data"),this.meshesElement=C("#meshes"),this.cellsElement=C("#cells"),this.renderedCellsElement=C("#rendered-cells"),this.instancesElement=C("#instances"),this.renderedInstancesElement=C("#rendered-instances"),this.verticesElement=C("#vertices"),this.renderedVerticesElement=C("#rendered-vertices"),this.trianglesElement=C("#triangles"),this.renderedTrianglesElement=C("#rendered-triangles")}update(){ct.isStatistics()&&(this.showingStatistics||(this.statisticsElement.style.display="block",this.showingStatistics=!0),this.updateElements())}updateElements(){this.updateRenderingApi(),this.updateFpsFrameTime(),this.updateCpuTime(),this.updateGpuTime(),this.updateElement(this.apiCallsElement,"API calls","api-calls"),this.updateElement(this.drawCallsElement,"Draw calls","draw-calls"),this.updateBufferData(),this.updateTextureData(),this.updateElement(this.meshesElement,"Meshes","meshes"),this.updateElement(this.cellsElement,"Cells in range","cells"),this.updateElement(this.renderedCellsElement,"Rendered cells","rendered-cells"),this.updateElement(this.instancesElement,"Instances","instances"),this.updateElement(this.renderedInstancesElement,"Rendered instances","rendered-instances"),this.updateElement(this.verticesElement,"Vertices","vertices"),this.updateElement(this.renderedVerticesElement,"Rendered vertices","rendered-vertices"),this.updateElement(this.trianglesElement,"Triangles","triangles"),this.updateElement(this.renderedTrianglesElement,"Rendered triangles","rendered-triangles")}updateRenderingApi(){this.renderingApiElement.textContent=function(e){switch(e){case je.WEBGL_1:return"WebGL 1";case je.WEBGL_2:return"WebGL 2";case je.WEBGPU:return"WebGPU"}}(ft.getRenderingApi())}updateFpsFrameTime(){const e=ot.getFps(),t=(1/e*1e3).toFixed(2);this.fpsFrameTimeElement.textContent=`${e} FPS / ${t} ms`}updateCpuTime(){const e=ot.getJsTime().toFixed(2);this.cpuTimeElement.textContent=`CPU time: ${e} ms`}updateGpuTime(){if(ft.getCapabilities().gpuTimer){const e=ot.getGpuTime().toFixed(2);this.gpuTimeElement.textContent=`GPU time: ${e} ms`}else this.gpuTimeElement.textContent=""}updateBufferData(){const e=T(lt.getValue("buffer-data")).toFixed(2);this.bufferDataElement.textContent=`Memory in buffers: ${e} MB`}updateTextureData(){const e=T(lt.getValue("texture-data")).toFixed(2);this.textureDataElement.textContent=`Memory in textures: ${e} MB`}updateElement(e,t,i){e.textContent=`${t}: ${lt.get(i)}`}hide(){this.statisticsElement.style.display="none",this.showingStatistics=!1}}class tt{constructor(){this.dialog=C("dialog"),this.initializeOpenOptionsButton(),this.initializeCloseOptionsButton(),this.apiSelector=this.initializeApiSelector(),this.initializeFovY(),this.initializeViewDistance(),this.initializeCellSize(),this.initializeInstanceCount(),this.initializeStatistics(),this.initializeFrustumCulling(),this.initializeCellsDebugger()}initializeOpenOptionsButton(){C("#open-options-button").addEventListener("click",(()=>{this.dialog.showModal()}))}initializeCloseOptionsButton(){C("#close-options-button").addEventListener("click",(()=>{this.dialog.close()}))}initializeApiSelector(){const e=C("#rendering-api-selector");return e.value=ct.getRenderingApi().toString(),e.addEventListener("change",(async()=>{ct.setRenderingApi(+this.apiSelector.value)})),e}initializeFovY(){const e=C("#fovy-input");e.value=ct.getFovY().toString(),e.addEventListener("change",(()=>{ct.setFovY(+e.value)}))}initializeViewDistance(){const e=C("#view-distance-input");e.value=ct.getViewDistance().toString(),e.addEventListener("change",(()=>{ct.setViewDistance(+e.value)}))}initializeCellSize(){const e=C("#cell-size-input");e.value=ct.getCellSize().toString(),e.addEventListener("change",(()=>{ct.setCellSize(+e.value)}))}initializeInstanceCount(){const e=C("#instance-count-input");e.value=ct.getInstanceCount().toString(),e.addEventListener("change",(()=>{ct.setInstanceCount(+e.value)}))}initializeFrustumCulling(){const e=C("#frustum-culling-input");e.checked=ct.isFrustumCulling(),e.addEventListener("change",(()=>{ct.setFrustumCulling(e.checked)}))}initializeCellsDebugger(){const e=C("#cells-debugger-input");e.checked=ct.isCellsDebugger(),ct.isCellsDebugger()&&dt.update(),e.addEventListener("change",(()=>{ct.setCellsDebugger(e.checked)}))}initializeStatistics(){const e=C("#statistics-input");e.checked=ct.isStatistics(),e.addEventListener("change",(()=>{ct.setStatistics(e.checked)}))}getSelectedRenderingApi(){return Number.parseInt(this.apiSelector.value)}isDialogOpened(){return this.dialog.open}}class it{constructor(){this.cellElements=[],this.grid=C("#cells-debugger")}update(){for(;this.grid.lastChild;)this.grid.removeChild(this.grid.lastChild);if(this.cellElements.length=0,!ct.isCellsDebugger())return;const e=I.getMaxFrustumDistance(),t=2*(Math.round(e/ct.getCellSize())+2)+1;this.grid.style.gridTemplateColumns=`repeat(${t}, 1fr)`,this.grid.style.gridTemplateRows=`repeat(${t}, 1fr)`,this.updateCells(t)}updateCells(e){const t=ft.getCanvas().clientHeight/3/e;for(let i=0;i<e*e;i++){const e=document.createElement("div");e.style.width=`${t}px`,e.style.height=`${t}px`,this.grid.appendChild(e),this.cellElements.push(e)}}show(){this.grid.style.display="grid"}hide(){this.grid.style.display="none"}setCellState(e,t){this.cellElements[e].className=this.getClass(t)}getClass(e){switch(e){case"camera":return"camera-cell";case"in-frustum":return"in-frustum-cell";case"in-range":return"in-range-cell";case"out-of-range":return"out-of-range-cell"}}}class st{constructor(){this.statistics=new Map}get(e){const t=this.statistics.get(e);return void 0===t?"-":t.toLocaleString()}getValue(e){return this.statistics.get(e)??0}set(e,t){this.statistics.set(e,t)}increment(e,t){const i=(this.statistics.get(e)??0)+t;this.set(e,i)}}class rt{constructor(){this.startMoment=performance.now(),this.lastFrameEndMoment=this.startMoment,this.frameStartMoment=0,this.averageFps=0,this.frameCount=0,this.currentSecondFrameCount=0,this.lastFrameTime=0,this.frameTimeSum=0,this.averageJsTime=0,this.jsTimeSum=0,this.averageGpuTime=0,this.gpuTimeSum=0,this.gpuTimeCount=0,this.gpuSecondStartMoment=this.startMoment}addElapsedGpuTime(e){const t=performance.now();this.gpuTimeSum+=e,this.gpuTimeCount++,this.gpuSecondStartMoment+rt.ONE_SECOND<t&&(this.averageGpuTime=this.gpuTimeSum/this.gpuTimeCount,this.gpuTimeSum=0,this.gpuTimeCount=0,this.gpuSecondStartMoment=t)}startFrame(){this.frameStartMoment=performance.now()}endFrame(){const e=performance.now();this.jsTimeSum+=e-this.frameStartMoment,this.lastFrameTime=e-this.lastFrameEndMoment,this.frameTimeSum+=this.lastFrameTime,this.lastFrameEndMoment=e,this.frameCount++,this.currentSecondFrameCount++,this.frameTimeSum>=rt.ONE_SECOND&&(this.averageFps=Math.round(this.currentSecondFrameCount/this.frameTimeSum*rt.ONE_SECOND),this.averageJsTime=this.jsTimeSum/this.currentSecondFrameCount,this.jsTimeSum=0,this.frameTimeSum=0,this.currentSecondFrameCount=0,ht.update())}getDeltaTimeFactor(){return this.lastFrameTime}getFps(){return this.averageFps}getTimeInMillisecs(){return performance.now()-this.startMoment}getTimeInSecs(){return this.getTimeInMillisecs()/rt.ONE_SECOND}getFrameCount(){return this.frameCount}getJsTime(){return this.averageJsTime}getGpuTime(){return this.averageGpuTime}}rt.ONE_SECOND=1e3;class nt{constructor(){this.keysDown=new Map,window.onblur=()=>{this.keysDown.clear()},window.onkeydown=e=>{this.keysDown.set(e.code,e)},window.onkeyup=e=>{this.keysDown.delete(e.code)}}isKeyDown(e){return!ut.isDialogOpened()&&this.keysDown.has(e)}}class at{constructor(){this.movement=r()}update(){const e=ot.getDeltaTimeFactor();this.updateTranslation(e),this.updateRotation(e)}updateTranslation(e){const t=mt.isKeyDown("ShiftLeft")?10:1,i=at.MOVE_SPEED*e*t,s=pt.getForward(),r=pt.getRight();a(this.movement,0,0,0);let n=!1;mt.isKeyDown("KeyA")&&(c(this.movement,this.movement,r),n=!0),mt.isKeyDown("KeyD")&&(o(this.movement,this.movement,r),n=!0),mt.isKeyDown("KeyW")&&(o(this.movement,this.movement,s),n=!0),mt.isKeyDown("KeyS")&&(c(this.movement,this.movement,s),n=!0),n&&(function(e,t,i){e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i}(this.movement,l(this.movement,this.movement),i),pt.move(this.movement))}updateRotation(e){const t=at.ROTATION_SPEED*e;let i=0;mt.isKeyDown("KeyQ")&&(i+=t),mt.isKeyDown("KeyE")&&(i-=t),0!==i&&pt.rotate(i)}}let ot,ct,lt,ht,ut,dt,mt,pt,gt,ft;async function xt(){try{console.log("This is a production build"),t=Array,ot=new rt,ct=new M,lt=new st,mt=new nt,gt=new at,ft=new Ze,await ft.initialize(vt),pt=new I,ht=new et,dt=new it,ut=new tt}catch(e){console.error(e),await ft.release()}await Et()}function vt(e,t){const i=[],s=ct.getInstanceCount(),r=ct.getCellSize();let n=D(Math.random(),Math.random(),Math.random());for(let a=0;a<s;a++){const s={position:D(e+Math.random()*r-r/2,.5,t+Math.random()*-r+r/2),rotation:D(0,0,0),scale:D(1,1,1),mesh:"cube",color:n};i.push(s)}return n=D(Math.random(),Math.random(),Math.random()),i.push({position:D(e,0,t),rotation:D(-90,0,0),scale:D(r/2,r/2,1),mesh:"quad",color:n}),i}async function Et(){ot.startFrame(),gt.update(),await ft.render(),ot.endFrame(),requestAnimationFrame((async()=>{await Et()}))}at.MOVE_SPEED=.025,at.ROTATION_SPEED=.075,xt()})();