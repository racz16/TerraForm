(()=>{"use strict";var e={d:(t,i)=>{for(var s in i)e.o(i,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:i[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{nS:()=>bt,Wc:()=>vt,qH:()=>Et,DH:()=>_t,YM:()=>pt,Vq:()=>xt,n6:()=>Ct,hd:()=>ft,cM:()=>gt,XV:()=>mt});var t="undefined"!=typeof Float32Array?Float32Array:Array;Math.random;var i=Math.PI/180;function s(e){return e*i}function n(){var e=new t(3);return t!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function r(e,i,s){var n=new t(3);return n[0]=e,n[1]=i,n[2]=s,n}function a(e,t,i,s){return e[0]=t,e[1]=i,e[2]=s,e}function o(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e}function c(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function l(e,t){var i=t[0],s=t[1],n=t[2],r=i*i+s*s+n*n;return r>0&&(r=1/Math.sqrt(r)),e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e}Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});function h(){var e=new t(16);return t!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}n();function u(){var e=new t(4);return t!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function d(e,t,i,s,n){return e[0]=t,e[1]=i,e[2]=s,e[3]=n,e}function m(){var e=new t(4);return t!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e[3]=1,e}u();var p;n(),r(1,0,0),r(0,1,0),m(),m(),p=new t(9),t!=Float32Array&&(p[1]=0,p[2]=0,p[3]=0,p[5]=0,p[6]=0,p[7]=0),p[0]=1,p[4]=1,p[8]=1;const f=new ArrayBuffer(64),g=function(){const e=[];for(let t=1;t<=16;t++)e.push(new Float32Array(f,0,t));return e}(),x=[];function v(e){const t=e,i=g[t.length-1];return i.set(t),i}function E(e){return document.querySelector(e)}function b(e){return e/1024/1024}function T(e){return e/1e3/1e3}function C(e,t,i){const s=x.pop();return s?a(s,e,t,i):r(e,t,i)}function _(e){x.push(e)}function y(e){return e.split("\n").map(((e,t)=>`${t+1}  ${e}`)).join("\n")}class w{constructor(e){this.descriptor=e}getId(){return null}getShader(){return this.descriptor.shader}}function S(){return Ct.getContext()}function A(){return S().getDevice()}class D{constructor(){this.deviceLostCount=0,this.valid=!0,this.capabilities={ndcCube:!1,uniformBuffer:!0,instancedRendering:!0,debugGroups:!0,instanceOffset:!0,depthTexture:!0,uvUp:!1,vertexArray:!1,gpuTimer:!1}}async initialize(){try{this.checkWebGPUSupport();const e=await this.getAdapter();this.device=await this.createDevice(e),this.context=this.getContext()}finally{}}getId(){return this.context}getCapabilities(){return this.capabilities}getCanvasFormat(){return this.canvasFormat}getDevice(){return this.device}getCurrentTexture(){return ft.increment("api-calls",1),this.context.getCurrentTexture()}checkWebGPUSupport(){if(!navigator.gpu)throw new it}async getAdapter(){const e=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(ft.increment("api-calls",1),!e||e.isFallbackAdapter)throw new Error("Couldn't get an adapter");return e}async logAdapterInfo(e){}async createDevice(e){const t=this.createDeviceDescriptor(e),i=await e.requestDevice(t);return ft.increment("api-calls",1),i.lost.then((e=>{"destroyed"!==e.reason&&(console.error("Device lost"),console.error(`Reason: ${e.reason}`),console.error(`Message: ${e.message}`),this.deviceLostCount++,this.deviceLostCount<=5&&_t())})),i}createDeviceDescriptor(e){const t={},i="timestamp-query";return this.capabilities.gpuTimer=e.features.has(i),this.capabilities.gpuTimer&&(t.requiredFeatures=[i]),t}logDeviceInfo(e){}getContext(){const e=Ct.getCanvas().getContext("webgpu");if(!e)throw new Error("Couldn't create a WebGPU context");return this.canvasFormat=navigator.gpu.getPreferredCanvasFormat(),e.configure({format:this.canvasFormat,device:this.device}),ft.increment("api-calls",3),e}configVertexBuffer(e,t){e.getEncoder().setVertexBuffer(t.index,t.buffer.getId(),t.offset??0),ft.increment("api-calls",1)}configIndexBuffer(e,t){e.getEncoder().setIndexBuffer(t.getId(),"uint16"),ft.increment("api-calls",1)}async stop(){await this.device.queue.onSubmittedWorkDone(),ft.increment("api-calls",1)}release(){this.valid&&(this.context?.unconfigure(),this.device?.destroy(),ft.increment("api-calls",2),this.valid=!1)}}class I{constructor(e){this.descriptor=e}async initialize(){const e={vertex:{module:this.descriptor.shader.getId(),buffers:this.descriptor.vertexBufferLayouts.map((e=>({arrayStride:e.stride,stepMode:e.instanced?"instance":"vertex",attributes:e.attributes.map((e=>({shaderLocation:e.index,offset:e.offset,format:this.getFormat(e.format)})))})))},fragment:{module:this.descriptor.shader.getId(),targets:this.descriptor.attachmentFormats.map((e=>({format:"canvas"===e?S().getCanvasFormat():"rgba8unorm"})))},primitive:{cullMode:"back"},layout:"auto",label:this.descriptor.label};this.descriptor.depthAttachment&&(e.depthStencil={format:"depth32float",depthWriteEnabled:!0,depthCompare:"less"}),this.pipeline=await A().createRenderPipelineAsync(e),ft.increment("api-calls",1)}getId(){return this.pipeline}getShader(){return this.descriptor.shader}getFormat(e){switch(e){case F.FLOAT_1:return"float32";case F.FLOAT_2:return"float32x2";case F.FLOAT_3:return"float32x3";case F.FLOAT_4:return"float32x4"}}}var F,M;async function R(e){if(Ze())return new w(e);if(et())return new w(e);{const t=new I(e);return t.initialize().then((()=>t))}}function B(){return Ct.getContext()}function U(){return B().getId()}!function(e){e[e.FLOAT_1=1]="FLOAT_1",e[e.FLOAT_2=2]="FLOAT_2",e[e.FLOAT_3=3]="FLOAT_3",e[e.FLOAT_4=4]="FLOAT_4"}(F||(F={}));class P{constructor(){this.capabilities={ndcCube:!0,debugGroups:!1,instanceOffset:!1,uvUp:!0,depthTexture:!1,gpuTimer:!1,instancedRendering:!1,uniformBuffer:!1,vertexArray:!1}}initializeShared(e){this.context=this.createContext(),this.context.enable(this.context.DEPTH_TEST),this.context.enable(this.context.CULL_FACE),ft.increment("api-calls",2),this.capabilitiesAndExtensions()}getCapabilities(){return this.capabilities}getContext(e){const t=Ct.getCanvas().getContext(e,{powerPreference:"high-performance",depth:!1,antialias:!1});return ft.increment("api-calls",1),Ct.getCanvas().addEventListener("webglcontextlost",(e=>{console.log("WebGL context lost",e),_t()})),t}getId(){return this.context}async stop(){this.context.flush(),ft.increment("api-calls",1)}configVbo(e){this.context.bindBuffer(this.context.ARRAY_BUFFER,e.buffer.getId()),ft.increment("api-calls",1);const t=e.layout;for(const i of t.attributes){this.context.vertexAttribPointer(i.index,this.getVertexAttribPointerSize(i.format),this.context.FLOAT,!1,t.stride,i.offset+(e.offset??0));const s=t.instanced?1:0;this.vertexAttribDivisor(i.index,s),this.context.enableVertexAttribArray(i.index),ft.increment("api-calls",3)}}configEbo(e){this.context.bindBuffer(this.context.ELEMENT_ARRAY_BUFFER,e.getId()),ft.increment("api-calls",1)}getVertexAttribPointerSize(e){switch(e){case F.FLOAT_1:return 1;case F.FLOAT_2:return 2;case F.FLOAT_3:return 3;case F.FLOAT_4:return 4}}configDraw(e,t,i){this.configVbo(e),i&&this.configVbo(i),this.configEbo(t)}release(){}}class z{constructor(e){this.context=U(),this.size=0,this.valid=!0,this.size=this.computeSize(e),this.usage=e.usage,this.target=this.getTarget(),this.id=this.context.createBuffer(),ft.increment("api-calls",1),this.bind(),this.initializeBufferData(e),ft.increment("buffer-data",this.size)}computeSize(e){return"size"===e.type||"data-callback"===e.type?e.size:e.dataLength??e.data.byteLength}getId(){return this.id}bind(){this.context.bindBuffer(this.target,this.id),ft.increment("api-calls",1)}getSize(){return this.size}getUsage(){return this.usage}release(){this.valid&&(this.context.deleteBuffer(this.id),ft.increment("api-calls",1),ft.increment("buffer-data",-this.size),this.size=0,this.valid=!1)}}class N extends z{initializeBufferData(e){const t=e.dynamic?this.context.DYNAMIC_DRAW:this.context.STATIC_DRAW;if("size"===e.type)this.context.bufferData(this.target,e.size,t);else if("data-callback"===e.type){const i=new ArrayBuffer(this.size);e.callback(i),this.context.bufferData(this.target,i,t)}else this.context.bufferData(this.target,e.data,t,e.dataOffset??0,e.dataLength);ft.increment("api-calls",1)}getTarget(){switch(this.usage){case M.VERTEX:return this.context.ARRAY_BUFFER;case M.INDEX:return this.context.ELEMENT_ARRAY_BUFFER;case M.UNIFORM:return this.context.UNIFORM_BUFFER}}setData(e){"math"===e.type?this.setData({type:"buffer",data:v(e.data),offset:e.offset}):(this.bind(),this.context.bufferSubData(this.target,e.offset??0,e.data,e.dataOffset??0,e.dataLength),ft.increment("api-calls",1))}}class L{constructor(e){this.device=A(),this.bindGroup=null,this.valid=!0,this.usage=e.usage,this.size=this.computeSize(e),this.buffer=this.createBuffer(e),this.initializeBufferData(e),ft.increment("buffer-data",this.size)}computeSize(e){return"size"===e.type||"data-callback"===e.type?e.size:e.dataLength??e.data.byteLength}createBuffer(e){const t={size:this.size,usage:this.getGpuUsage(),label:e.label,mappedAtCreation:"data-callback"===e.type};return ft.increment("api-calls",1),this.device.createBuffer(t)}initializeBufferData(e){if("data"===e.type)this.setData({type:"buffer",data:e.data,dataOffset:e.dataOffset,dataLength:e.dataLength});else if("data-callback"===e.type){const t=this.buffer.getMappedRange();e.callback(t),this.buffer.unmap(),ft.increment("api-calls",2)}}getBindGroup(e,t){return this.bindGroup||(this.bindGroup=this.device.createBindGroup({layout:e.getBindGroupLayout(t),entries:[{binding:0,resource:{buffer:this.buffer}}]}),ft.increment("api-calls",2)),this.bindGroup}getGpuUsage(){let e=GPUBufferUsage.COPY_DST;return this.usage===M.VERTEX&&(e|=GPUBufferUsage.VERTEX),this.usage===M.INDEX&&(e|=GPUBufferUsage.INDEX),this.usage===M.UNIFORM&&(e|=GPUBufferUsage.UNIFORM),e}getId(){return this.buffer}getSize(){return this.size}getUsage(){return this.usage}setData(e){"math"===e.type?this.setData({type:"buffer",data:v(e.data),offset:e.offset}):(this.device.queue.writeBuffer(this.buffer,e.offset??0,e.data,e.dataOffset,e.dataLength),ft.increment("api-calls",1))}release(){this.valid&&(this.buffer.destroy(),ft.increment("buffer-data",-this.size),ft.increment("api-calls",1),this.size=0,this.valid=!1)}}class O extends z{initializeBufferData(e){const t=e.dynamic?this.context.DYNAMIC_DRAW:this.context.STATIC_DRAW;if("size"===e.type)this.context.bufferData(this.target,e.size,t);else if("data-callback"===e.type){const i=new ArrayBuffer(this.size);e.callback(i),this.context.bufferData(this.target,i,t)}else this.context.bufferData(this.target,e.data,t);ft.increment("api-calls",1)}getTarget(){switch(this.usage){case M.VERTEX:return this.context.ARRAY_BUFFER;case M.INDEX:return this.context.ELEMENT_ARRAY_BUFFER;case M.UNIFORM:throw new Error("Uniform buffers are not supported in WebGL 1")}}setData(e){"math"===e.type?this.setData({type:"buffer",data:v(e.data),offset:e.offset}):(this.bind(),this.context.bufferSubData(this.target,e.offset??0,e.data),ft.increment("api-calls",1))}}function G(e){return Ze()?new O(e):et()?new N(e):new L(e)}!function(e){e[e.VERTEX=1]="VERTEX",e[e.INDEX=2]="INDEX",e[e.UNIFORM=4]="UNIFORM"}(M||(M={}));class V{constructor(e,t){this.pipeline=e,this.renderpass=t}execute(){this.renderpass.getEncoder().setPipeline(this.pipeline.getId()),ft.increment("api-calls",1)}}class W{constructor(e,t){this.descriptor=e,this.renderpass=t}execute(){S().configVertexBuffer(this.renderpass,this.descriptor)}}class q{constructor(e,t){this.indexBuffer=e,this.renderpass=t}execute(){S().configIndexBuffer(this.renderpass,this.indexBuffer)}}class X{constructor(e,t){this.contextWrapper=S(),this.descriptor=e,this.renderpass=t}execute(){const e=this.descriptor.drawConfig.getMesh();this.contextWrapper.configVertexBuffer(this.renderpass,e.vertexBufferDescriptor),this.contextWrapper.configIndexBuffer(this.renderpass,e.indexBufferDescriptor.buffer)}}class k{constructor(e,t,i){this.descriptor=e,this.renderpass=t,this.pipeline=i}execute(){const e=this.descriptor.value.getBindGroup(this.pipeline.getId(),this.descriptor.index);this.renderpass.getEncoder().setBindGroup(this.descriptor.index,e),ft.increment("api-calls",1)}}class Y{constructor(e,t,i){this.descriptor=e,this.renderpass=t,this.pipeline=i}execute(){const e=this.descriptor.value.getBindGroup(this.pipeline.getId(),this.descriptor.index);this.renderpass.getEncoder().setBindGroup(this.descriptor.index,e),ft.increment("api-calls",1)}}class Q{constructor(e,t){this.indexCount=e,this.renderpass=t}execute(){this.renderpass.getEncoder().drawIndexed(this.indexCount),ft.increment("draw-calls",1),ft.increment("api-calls",1),ft.increment("rendered-instances",1)}}class H{constructor(e,t){this.descriptor=e,this.renderpass=t}execute(){this.renderpass.getEncoder().drawIndexed(this.descriptor.indexCount,this.descriptor.instanceCount,0,0,this.descriptor.instanceOffset),ft.increment("draw-calls",1),ft.increment("api-calls",1),ft.increment("rendered-instances",this.descriptor.instanceCount)}}class ${constructor(e,t){this.label=e,this.renderpass=t}execute(){this.renderpass.getEncoder().pushDebugGroup(this.label),ft.increment("api-calls",1)}}class j{constructor(e){this.renderpass=e}execute(){this.renderpass.getEncoder().popDebugGroup(),ft.increment("api-calls",1)}}class K{constructor(e,t){this.label=e,this.renderpass=t}execute(){this.renderpass.getEncoder().insertDebugMarker(this.label),ft.increment("api-calls",1)}}class J{constructor(e,t){this.commands=[],this.commandBuffer=t,this.query=e.query,this.label=e.label,this.descriptor=e}createRenderPassEncoder(e,t){const i={label:`${this.label} renderpass`,colorAttachments:this.getColorAttachments(e)},s=e.depthStencilAttachment;return s&&(i.depthStencilAttachment={view:s.texture.getId().createView(),depthLoadOp:s.clearValue?"clear":"load",depthClearValue:s.clearValue,depthStoreOp:"store"},ft.increment("api-calls",1)),st().gpuTimer&&this.query&&(i.timestampWrites={querySet:this.query.getId(),beginningOfPassWriteIndex:0,endOfPassWriteIndex:1}),ft.increment("api-calls",2),t.beginRenderPass(i)}getColorAttachments(e){return ft.increment("api-calls",1),"canvas"===e.type?[{loadOp:e.clearColor?"clear":"load",clearValue:e.clearColor,storeOp:"store",view:S().getCurrentTexture().createView()}]:e.colorAttachments.map((e=>({loadOp:e.clearColor?"clear":"load",clearValue:e.clearColor,storeOp:"store",view:e.texture.getView()})))}setPipelineCommand(e){this.pipeline=e,this.commands.push(new V(e,this))}setVertexBufferCommand(e){this.commands.push(new W(e,this))}setDrawConfigCommand(e){this.commands.push(new X(e,this))}setIndexBufferCommand(e){this.commands.push(new q(e,this))}setUniformBufferCommand(e){this.commands.push(new k(e,this,this.pipeline))}setUniformFloatCommand(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformVec2Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformVec3Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformVec4Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformMat2Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformMat3Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformMat4Command(){throw new Error("Individual uniforms are not supported in WebGPU")}setUniformTextureCommand(e){this.commands.push(new Y(e,this,this.pipeline))}drawIndexedCommand(e){this.commands.push(new Q(e,this))}drawInstancedIndexedCommand(e){this.commands.push(new H(e,this))}pushDebugGroupCommand(e){this.commands.push(new $(e,this))}popDebugGroupCommand(){this.commands.push(new j(this))}addDebugLabelCommand(e){this.commands.push(new K(e,this))}getEncoder(){return this.renderPassEncoder}updateQuery(){this.query?.update()}execute(){const e=this.commandBuffer.getCommandEncoder();this.renderPassEncoder=this.createRenderPassEncoder(this.descriptor,e);for(const e of this.commands)e.execute();this.commands.length=0,this.renderPassEncoder.end(),st().gpuTimer&&this.query&&this.query.resolve(e),ft.increment("api-calls",1)}release(){}}class Z{constructor(e){this.device=A(),this.renderpasses=[],this.label=e}getCommandEncoder(){return this.commandEncoder}createRenderpass(e){const t=new J(e,this);return this.renderpasses.push(t),t}execute(){this.commandEncoder=this.device.createCommandEncoder({label:`${this.label} command encoder`});for(const e of this.renderpasses)e.execute();const e=this.commandEncoder.finish({label:this.label});if(this.device.queue.submit([e]),ft.increment("api-calls",3),st().gpuTimer)for(const e of this.renderpasses)e.updateQuery()}}class ee{constructor(e){this.context=U(),this.pipeline=e}execute(){this.context.useProgram(this.pipeline.getShader().getId()),ft.increment("api-calls",1)}}class te{constructor(e){this.contextWrapper=B(),this.indexBuffer=e}execute(){this.contextWrapper.configEbo(this.indexBuffer)}}class ie{constructor(e,t){this.context=U(),this.descriptor=e,this.shader=t}execute(){const e=this.shader.getUniformLocation(this.descriptor.name);this.setUniform(e)}}class se extends ie{setUniform(e){this.context.uniform1f(e,this.descriptor.value),ft.increment("api-calls",1)}}class ne extends ie{setUniform(e){this.context.uniform2fv(e,this.descriptor.value),ft.increment("api-calls",1)}}class re extends ie{setUniform(e){this.context.uniform3fv(e,this.descriptor.value),ft.increment("api-calls",1)}}class ae extends ie{setUniform(e){this.context.uniform4fv(e,this.descriptor.value),ft.increment("api-calls",1)}}class oe extends ie{setUniform(e){this.context.uniformMatrix2fv(e,!1,this.descriptor.value),ft.increment("api-calls",1)}}class ce extends ie{setUniform(e){this.context.uniformMatrix3fv(e,!1,this.descriptor.value),ft.increment("api-calls",1)}}class le extends ie{setUniform(e){this.context.uniformMatrix4fv(e,!1,this.descriptor.value),ft.increment("api-calls",1)}}class he extends ie{constructor(e,t){super(e,t),this.textureUnit=e.index}setUniform(e){this.context.activeTexture(this.context.TEXTURE0+this.textureUnit);const t=this.descriptor.value;this.context.bindTexture(this.context.TEXTURE_2D,t.getId()),this.context.uniform1i(e,this.textureUnit),ft.increment("api-calls",3)}}class ue{constructor(e){this.context=U(),this.indexCount=e}execute(){this.context.drawElements(this.context.TRIANGLES,this.indexCount,this.context.UNSIGNED_SHORT,0),ft.increment("draw-calls",1),ft.increment("api-calls",1),ft.increment("rendered-instances",1)}}class de{constructor(e){this.context=U(),this.contextWrapper=B(),this.commands=[],this.fbo=null,this.descriptor=e,this.query=e.query,"offscreen"===this.descriptor.type&&this.createFbo(this.descriptor)}createFbo(e){this.fbo=this.context.createFramebuffer(),this.context.bindFramebuffer(this.context.FRAMEBUFFER,this.fbo),ft.increment("api-calls",2),this.addColorAttachments(e),this.addDepthAttachment()}addColorAttachments(e){for(let t=0;t<e.colorAttachments.length;t++){const i=e.colorAttachments[t];this.context.framebufferTexture2D(this.context.FRAMEBUFFER,this.context.COLOR_ATTACHMENT0+t,this.context.TEXTURE_2D,i.texture.getId(),0)}ft.increment("api-calls",e.colorAttachments.length)}addDepthAttachment(){this.descriptor.depthStencilAttachment&&(this.context.framebufferTexture2D(this.context.FRAMEBUFFER,this.context.DEPTH_ATTACHMENT,this.context.TEXTURE_2D,this.descriptor.depthStencilAttachment.texture.getId(),0),ft.increment("api-calls",1))}setPipelineCommand(e){this.pipeline=e,this.commands.push(new ee(e))}setIndexBufferCommand(e){this.commands.push(new te(e))}setUniformFloatCommand(e){const t=this.pipeline.getShader();this.commands.push(new se(e,t))}setUniformVec2Command(e){const t=this.pipeline.getShader();this.commands.push(new ne(e,t))}setUniformVec3Command(e){const t=this.pipeline.getShader();this.commands.push(new re(e,t))}setUniformVec4Command(e){const t=this.pipeline.getShader();this.commands.push(new ae(e,t))}setUniformMat2Command(e){const t=this.pipeline.getShader();this.commands.push(new oe(e,t))}setUniformMat3Command(e){const t=this.pipeline.getShader();this.commands.push(new ce(e,t))}setUniformMat4Command(e){const t=this.pipeline.getShader();this.commands.push(new le(e,t))}setUniformTextureCommand(e){const t=this.pipeline.getShader();this.commands.push(new he(e,t))}drawIndexedCommand(e){this.commands.push(new ue(e))}pushDebugGroupCommand(){throw new Error("Debug groups are not supported in WebGL")}popDebugGroupCommand(){throw new Error("Debug groups are not supported in WebGL")}addDebugLabelCommand(){throw new Error("Debug labels are not supported in WebGL")}execute(){this.configureFbo(),st().gpuTimer&&this.query?.begin();for(const e of this.commands)e.execute();this.unbundVao(),this.commands.length=0,st().gpuTimer&&(this.query?.end(),this.query?.update())}configureFbo(){const e=Ct.getCanvas();this.context.viewport(0,0,e.clientWidth,e.clientHeight),this.descriptor.depthStencilAttachment?this.context.enable(this.context.DEPTH_TEST):this.context.disable(this.context.DEPTH_TEST),ft.increment("api-calls",2),"canvas"===this.descriptor.type?(this.context.bindFramebuffer(this.context.FRAMEBUFFER,null),ft.increment("api-calls",1)):(this.context.bindFramebuffer(this.context.FRAMEBUFFER,this.fbo),ft.increment("api-calls",1),this.configureColorAttachments(this.descriptor),this.configureDepthAttachment())}configureColorAttachments(e){for(let t=0;t<e.colorAttachments.length;t++){const i=e.colorAttachments[t];if(i.clearColor){const e=i.clearColor;this.clearColor(t,e)}}}configureDepthAttachment(){this.descriptor.depthStencilAttachment?.clearValue&&(this.context.clearDepth(this.descriptor.depthStencilAttachment.clearValue),this.context.clear(this.context.DEPTH_BUFFER_BIT),ft.increment("api-calls",2))}release(){this.fbo&&(this.context.deleteFramebuffer(this.fbo),ft.increment("api-calls",1),this.fbo=null)}}function me(){return Ct.getContext()}class pe extends P{constructor(){super(...arguments),this.gl1GpuTimeExtension=null,this.gl1InstancedRenderingExtension=null,this.gl1DepthTexture=null,this.gl1VertexArrayObject=null}initialize(){this.initializeShared("WebGL 1")}getId(){return this.context}capabilitiesAndExtensions(){this.gl1GpuTimeExtension=this.context.getExtension("EXT_disjoint_timer_query"),this.gl1InstancedRenderingExtension=this.context.getExtension("ANGLE_instanced_arrays"),this.gl1DepthTexture=this.context.getExtension("WEBGL_depth_texture"),this.gl1VertexArrayObject=this.context.getExtension("OES_vertex_array_object"),ft.increment("api-calls",3);let e=0;this.gl1GpuTimeExtension&&(e=this.gl1GpuTimeExtension.getQueryEXT(this.gl1GpuTimeExtension.TIME_ELAPSED_EXT,this.gl1GpuTimeExtension.QUERY_COUNTER_BITS_EXT),ft.increment("api-calls",1)),this.capabilities.uniformBuffer=!1,this.capabilities.gpuTimer=!(!this.gl1GpuTimeExtension||!e),this.capabilities.instancedRendering=!!this.gl1InstancedRenderingExtension,this.capabilities.depthTexture=!!this.gl1DepthTexture,this.capabilities.vertexArray=!!this.gl1VertexArrayObject}createContext(){const e=this.getContext("webgl")||this.getContext("webgl-experimental");if(!e)throw new it;return e}getGpuTimeExtension(){return this.gl1GpuTimeExtension}getInstancedRenderingExtension(){return this.gl1InstancedRenderingExtension}getDepthTextureExtension(){return this.gl1DepthTexture}getVertexArrayObjectExtension(){return this.gl1VertexArrayObject}vertexAttribDivisor(e,t){this.getInstancedRenderingExtension().vertexAttribDivisorANGLE(e,t)}}class fe{constructor(e){this.descriptor=e}execute(){me().configVbo(this.descriptor)}}class ge{constructor(e){this.contextWrapper=me(),this.descriptor=e}execute(){if(st().vertexArray){const e=this.descriptor.drawConfig;this.contextWrapper.getVertexArrayObjectExtension()?.bindVertexArrayOES(e.getId()),ft.increment("api-calls",1)}else{const e=this.descriptor.drawConfig.getMesh();this.contextWrapper.configDraw(e.vertexBufferDescriptor,e.indexBufferDescriptor.buffer,this.descriptor.drawConfig.getInstanceData())}}}class xe{constructor(e){this.context=U(),this.descriptor=e}execute(){me().getInstancedRenderingExtension().drawElementsInstancedANGLE(this.context.TRIANGLES,this.descriptor.indexCount,this.context.UNSIGNED_SHORT,0,this.descriptor.instanceCount),ft.increment("draw-calls",1),ft.increment("api-calls",1),ft.increment("rendered-instances",this.descriptor.instanceCount)}}class ve extends de{setVertexBufferCommand(e){this.commands.push(new fe(e))}setDrawConfigCommand(e){this.commands.push(new ge(e))}setUniformBufferCommand(){throw new Error("Uniform buffers are not supported in WebGL 1")}drawInstancedIndexedCommand(e){this.commands.push(new xe(e))}fboStatusToString(e){switch(e){case this.context.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case this.context.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case this.context.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"UNKNOWN FRAMEBUFFER STATUS"}}clearColor(e,t){this.context.clearColor(t[0],t[1],t[2],t[3]),this.context.clear(this.context.COLOR_BUFFER_BIT),ft.increment("api-calls",2)}unbundVao(){st().vertexArray&&(me().getVertexArrayObjectExtension().bindVertexArrayOES(null),ft.increment("api-calls",1))}}function Ee(){return Ct.getContext()}function be(){return Ee().getId()}class Te extends P{constructor(){super(...arguments),this.gl2GpuTimeExtension=null}initialize(){this.initializeShared("WebGL 2")}getGpuTimeExtension(){return this.gl2GpuTimeExtension}getId(){return this.context}capabilitiesAndExtensions(){this.gl2GpuTimeExtension=this.context.getExtension("EXT_disjoint_timer_query_webgl2"),ft.increment("api-calls",1);let e=0;this.gl2GpuTimeExtension&&(e=this.context.getQuery(this.gl2GpuTimeExtension.TIME_ELAPSED_EXT,this.gl2GpuTimeExtension.QUERY_COUNTER_BITS_EXT),ft.increment("api-calls",1)),this.capabilities.uniformBuffer=!0,this.capabilities.gpuTimer=!(!this.gl2GpuTimeExtension||!e),this.capabilities.instancedRendering=!0,this.capabilities.depthTexture=!0,this.capabilities.vertexArray=!0}createContext(){const e=this.getContext("webgl2");if(!e)throw new it;return e}vertexAttribDivisor(e,t){this.context.vertexAttribDivisor(e,t)}}class Ce{constructor(e){this.descriptor=e}execute(){Ee().configVbo(this.descriptor)}}class _e{constructor(e){this.descriptor=e}execute(){const e=this.descriptor.drawConfig;be().bindVertexArray(e.getId()),ft.increment("api-calls",1)}}class ye{constructor(e,t){this.context=be(),this.descriptor=e,this.shader=t}execute(){const e=this.descriptor.value,t=this.shader,i=t.getUniformBlockIndex(this.descriptor.name);this.context.uniformBlockBinding(t.getId(),i,this.descriptor.index),this.context.bindBufferBase(this.context.UNIFORM_BUFFER,this.descriptor.index,e.getId()),ft.increment("api-calls",2)}}class we{constructor(e){this.context=be(),this.descriptor=e}execute(){this.context.drawElementsInstanced(this.context.TRIANGLES,this.descriptor.indexCount,this.context.UNSIGNED_SHORT,0,this.descriptor.instanceCount),ft.increment("draw-calls",1),ft.increment("api-calls",1),ft.increment("rendered-instances",this.descriptor.instanceCount)}}class Se extends de{setVertexBufferCommand(e){this.commands.push(new Ce(e))}setDrawConfigCommand(e){this.commands.push(new _e(e))}setUniformBufferCommand(e){this.commands.push(new ye(e,this.pipeline.getShader()))}drawInstancedIndexedCommand(e){this.commands.push(new we(e))}fboStatusToString(e){switch(e){case this.context.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case this.context.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case this.context.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";case this.context.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:return"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE";default:return"UNKNOWN FRAMEBUFFER STATUS"}}clearColor(e,t){this.context.clearBufferfv(this.context.COLOR,e,t),ft.increment("api-calls",1)}unbundVao(){this.context.bindVertexArray(null),ft.increment("api-calls",1)}}class Ae{constructor(){this.renderpasses=[]}createRenderpass(e){const t=this.createGlRenderpass(e);return this.renderpasses.push(t),t}createGlRenderpass(e){return Ze()?new ve(e):new Se(e)}execute(){for(const e of this.renderpasses)e.execute()}}class De{static get(e){const t=De.shaders.get(e);if(!t)throw new Error(`Couldn't find shader ${e}`);return t}}De.shaders=new Map,De.shaders.set("gl-lambertian-vertex","#if __VERSION__ == 100\r\n attribute vec3 vertex_position_u; attribute vec3 vertex_normal_v; attribute vec4 instance_position_scale; attribute vec3 instance_rotation; attribute vec3 instance_color; varying vec3 vf_normal; varying vec3 vf_color; uniform mat4 VP;\r\n#else\r\n layout(location = 0) in vec3 vertex_position_u; layout(location = 1) in vec3 vertex_normal_v; layout(location = 2) in vec4 instance_position_scale; layout(location = 3) in vec3 instance_rotation; layout(location = 4) in vec3 instance_color; out vec3 vf_normal; out vec3 vf_color; layout(std140) uniform frame_data { mat4 VP; vec3 light; };\r\n#endif\r\nmat4 create_model_matrix(vec3 position, vec3 rotation, float scale) { float cx = cos(rotation.x); float sx = sin(rotation.x); float cy = cos(rotation.y); float sy = sin(rotation.y); float cz = cos(rotation.z); float sz = sin(rotation.z); return mat4( scale * (cy * cz), scale * (cy * sz), scale * (-sy), 0, scale * (sx * sy * cz - cx * sz), scale * (sx * sy * sz + cx * cz), scale * (sx * cy), 0, scale * (cx * sy * cz + sx * sz), scale * (cx * sy * sz - sx * cz), scale * (cx * cy), 0, position.x, position.y, position.z, 1 );}void main() { vec3 vertex_position = vertex_position_u.xyz; vec3 vertex_normal = vertex_normal_v.xyz; vec3 instance_position = instance_position_scale.xyz; float instance_scale = instance_position_scale.w; mat4 M = create_model_matrix(instance_position, instance_rotation, instance_scale); gl_Position = VP * M * vec4(vertex_position, 1.0); vf_normal = mat3(M) * vertex_normal; vf_color = instance_color;}"),De.shaders.set("gl-lambertian-fragment","precision highp float;\r\n#if __VERSION__ == 100\r\n varying vec3 vf_normal; varying vec3 vf_color; uniform vec3 light;\r\n#else\r\n in vec3 vf_normal; in vec3 vf_color; layout(location = 0) out vec4 color; layout(std140) uniform frame_data { mat4 VP; vec3 light; };\r\n#endif\r\nvoid main() { vec3 N = normalize(vf_normal); vec3 L = light; vec3 result = vf_color * dot(N, -L);\r\n #if __VERSION__ == 100\r\n gl_FragColor = vec4(result, 1.0);\r\n #else\r\n color = vec4(result, 1.0);\r\n #endif\r\n}"),De.shaders.set("gl-quad-vertex","#if __VERSION__ == 100\r\n attribute vec3 vertex_position; attribute vec2 vertex_tc; varying vec2 vf_tc;\r\n#else\r\n layout(location = 0) in vec3 vertex_position; layout(location = 1) in vec2 vertex_tc; out vec2 vf_tc;\r\n#endif\r\nvoid main() { vf_tc = vertex_tc; gl_Position = vec4(vertex_position, 1.0);}"),De.shaders.set("gl-quad-fragment","precision highp float;\r\n#if __VERSION__ == 100\r\n varying vec2 vf_tc;\r\n#else\r\n in vec2 vf_tc; layout(location = 0) out vec4 color;\r\n#endif\r\nuniform sampler2D image;void main() {\r\n #if __VERSION__ == 100\r\n gl_FragColor = texture2D(image, vf_tc);\r\n #else\r\n color = texture(image, vf_tc);\r\n #endif\r\n}"),De.shaders.set("gpu-lambertian","struct frame_data_t{VP:mat4x4f,light:vec3f};@group(0)@binding(0)var<uniform>frame_data:frame_data_t;struct vertex_t{@location(0)vertex_position_u:vec4f,@location(1)vertex_normal_v:vec4f,};struct instance_t{@location(2)instance_position_scale:vec4f,@location(3)instance_rotation:vec3f,@location(4)instance_color:vec3f,};struct varying_t{@builtin(position)position:vec4f,@location(0)normal:vec3f,@location(1)color:vec3f};fn create_model_matrix(position:vec3f,rotation:vec3f,scale:f32)->mat4x4f{var cx=cos(rotation.x);var sx=sin(rotation.x);var cy=cos(rotation.y);var sy=sin(rotation.y);var cz=cos(rotation.z);var sz=sin(rotation.z);return mat4x4f(scale*(cy*cz),scale*(cy*sz),scale*(-sy),0,scale*(sx*sy*cz-cx*sz),scale*(sx*sy*sz+cx*cz),scale*(sx*cy),0,scale*(cx*sy*cz+sx*sz),scale*(cx*sy*sz-sx*cz),scale*(cx*cy),0,position.x,position.y,position.z,1);}@vertex fn vertex(vertex:vertex_t,instance:instance_t)->varying_t{var vertex_position=vertex.vertex_position_u.xyz;var vertex_normal=vertex.vertex_normal_v.xyz;var instance_position=instance.instance_position_scale.xyz;var instance_scale=instance.instance_position_scale.w;let M=create_model_matrix(instance_position,instance.instance_rotation,instance_scale);var vf_varying:varying_t;vf_varying.position=frame_data.VP*M*vec4f(vertex_position,1.0);vf_varying.normal=mat3x3f(M[0].xyz,M[1].xyz,M[2].xyz)*vertex_normal;vf_varying.color=instance.instance_color;return vf_varying;}@fragment fn fragment(vf_varying:varying_t)->@location(0)vec4f{let N=normalize(vf_varying.normal);let L=frame_data.light;return vec4f(vf_varying.color*dot(N,-L),1.0);}"),De.shaders.set("gpu-quad","struct vertex_t{@location(0)vertex_position:vec3f,@location(1)vertex_tc:vec2f,};struct varying_t{@builtin(position)position:vec4f,@location(0)tc:vec2f};@vertex fn vertex(vertex:vertex_t)->varying_t{var vf_varying:varying_t;vf_varying.position=vec4f(vertex.vertex_position,1.0);vf_varying.tc=vertex.vertex_tc;return vf_varying;}@group(0)@binding(0)var quad_sampler:sampler;@group(0)@binding(1)var quad_texture:texture_2d<f32>;@fragment fn fragment(vf_varying:varying_t)->@location(0)vec4f{return textureSample(quad_texture,quad_sampler,vf_varying.tc);}");class Ie{constructor(e){this.context=U(),this.uniformLocations=new Map,this.valid=!0,this.name=e.name;const t=this.getShader(this.context.VERTEX_SHADER,this.getVertexShaderSource()),i=this.getShader(this.context.FRAGMENT_SHADER,this.getFragmentShaderSource());this.program=this.context.createProgram(),this.setAttributeLocations(e.vertexBufferLayouts),this.context.attachShader(this.program,t),this.context.attachShader(this.program,i),this.context.linkProgram(this.program),this.context.deleteShader(t),this.context.deleteShader(i),ft.increment("api-calls",6)}getVertexShaderSource(){return De.get(`gl-${this.name}-vertex`)}getFragmentShaderSource(){return De.get(`gl-${this.name}-fragment`)}getId(){return this.program}getShader(e,t){const i=this.getShaderHeader()+t,s=this.context.createShader(e);return this.context.shaderSource(s,i),this.context.compileShader(s),ft.increment("api-calls",3),s}getUniformLocation(e){let t=this.uniformLocations.get(e);return t||(t=this.context.getUniformLocation(this.program,e)??void 0,ft.increment("api-calls",1),this.uniformLocations.set(e,t)),t}throwError(e,t,i,s){let n=`${t} "${e}"\n`;throw n+=i+"\n",n+=this.getSource(s),new Error(n)}getSource(e){if(e)return y(e);{const e=this.getVertexShaderSource(),t=this.getFragmentShaderSource();return y(e)+"\n\n"+y(t)}}release(){this.valid&&(this.context.deleteProgram(this.program),ft.increment("api-calls",1),this.valid=!1)}}class Fe extends Ie{getShaderHeader(){return""}setAttributeLocations(e){for(const t of e)for(const e of t.attributes)e.name&&(this.context.bindAttribLocation(this.program,e.index,e.name),ft.increment("api-calls",1))}}class Me extends Ie{constructor(){super(...arguments),this.uniformBlockIndices=new Map}getShaderHeader(){return"#version 300 es\n"}setAttributeLocations(){}getUniformBlockIndex(e){let t=this.uniformBlockIndices.get(e);return null==t&&(t=this.context.getUniformBlockIndex(this.program,e),ft.increment("api-calls",1),this.uniformBlockIndices.set(e,t)),t}}class Re{constructor(e){const t=De.get(`gpu-${e.name}`);this.shaderModule=A().createShaderModule({code:t,label:e.label}),ft.increment("api-calls",1)}getId(){return this.shaderModule}async checkCompilationInfo(e,t){const i=await this.shaderModule.getCompilationInfo();ft.increment("api-calls",1),i.messages.length&&this.throwError(e,t,i.messages)}throwError(e,t,i){let s=`Invalid shader '${e}'\n`;for(const e of i)s+=e.message+`, line: ${e.lineNum}\n`;throw s+=y(t),new Error(s)}release(){}}function Be(e){return Ze()?new Fe(e):et()?new Me(e):new Re(e)}class Ue{constructor(e){this.context=U(),this.inProgress=!1,this.valid=!0,this.handler=e.handler}update(){if(this.inProgress&&this.isResultAvailable()){if(this.isResultValid()){const e=this.getResult();this.handler(T(e))}this.inProgress=!1}}}class Pe extends Ue{constructor(e){super(e),this.gpuTimeExtension=me().getGpuTimeExtension(),this.query=this.gpuTimeExtension.createQueryEXT(),ft.increment("api-calls",1)}getId(){return this.query}begin(){this.inProgress||(this.gpuTimeExtension.beginQueryEXT(this.gpuTimeExtension.TIME_ELAPSED_EXT,this.query),ft.increment("api-calls",1))}end(){this.inProgress||(this.gpuTimeExtension.endQueryEXT(this.gpuTimeExtension.TIME_ELAPSED_EXT),this.context.flush(),ft.increment("api-calls",2),this.inProgress=!0)}isResultAvailable(){return ft.increment("api-calls",1),this.gpuTimeExtension.getQueryObjectEXT(this.query,this.gpuTimeExtension.QUERY_RESULT_AVAILABLE_EXT)}isResultValid(){return ft.increment("api-calls",1),!this.context.getParameter(this.gpuTimeExtension.GPU_DISJOINT_EXT)}getResult(){return ft.increment("api-calls",1),this.gpuTimeExtension.getQueryObjectEXT(this.query,this.gpuTimeExtension.QUERY_RESULT_EXT)}release(){this.valid&&(this.gpuTimeExtension.deleteQueryEXT(this.query),ft.increment("api-calls",1),this.valid=!1)}}class ze extends Ue{constructor(e){super(e),this.gpuTimeExtension=Ee().getGpuTimeExtension(),this.query=this.context.createQuery(),ft.increment("api-calls",1)}getId(){return this.query}begin(){this.inProgress||(this.context.beginQuery(this.gpuTimeExtension.TIME_ELAPSED_EXT,this.query),ft.increment("api-calls",1))}end(){this.inProgress||(this.context.endQuery(this.gpuTimeExtension.TIME_ELAPSED_EXT),this.context.flush(),ft.increment("api-calls",2),this.inProgress=!0)}isResultAvailable(){return ft.increment("api-calls",1),this.context.getQueryParameter(this.query,this.context.QUERY_RESULT_AVAILABLE)}isResultValid(){return ft.increment("api-calls",1),!this.context.getParameter(this.gpuTimeExtension.GPU_DISJOINT_EXT)}getResult(){return ft.increment("api-calls",1),this.context.getQueryParameter(this.query,this.context.QUERY_RESULT)}release(){this.valid&&(this.context.deleteQuery(this.query),ft.increment("api-calls",1),this.valid=!1)}}class Ne{constructor(e){this.device=A(),this.valid=!0,this.querySet=this.device.createQuerySet({label:e.label,count:Ne.TIMESTAMP_COUNT,type:"timestamp"}),this.resolveQueryBufer=this.device.createBuffer({label:"resolve query buffer",size:8*Ne.TIMESTAMP_COUNT,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultQueryBuffer=this.device.createBuffer({label:"result query buffer",size:8*Ne.TIMESTAMP_COUNT,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),ft.increment("api-calls",3),ft.increment("buffer-data",16*Ne.TIMESTAMP_COUNT),this.handler=e.handler}getId(){return this.querySet}resolve(e){e.resolveQuerySet(this.querySet,0,Ne.TIMESTAMP_COUNT,this.resolveQueryBufer,0),ft.increment("api-calls",1),"unmapped"===this.resultQueryBuffer.mapState&&(e.copyBufferToBuffer(this.resolveQueryBufer,0,this.resultQueryBuffer,0,this.resultQueryBuffer.size),ft.increment("api-calls",1))}update(){"unmapped"===this.resultQueryBuffer.mapState&&(this.resultQueryBuffer.mapAsync(GPUMapMode.READ).then((()=>{const e=new BigInt64Array(this.resultQueryBuffer.getMappedRange()),t=T(Number(e[0])),i=T(Number(e[1]));this.handler(i-t),this.resultQueryBuffer.unmap(),ft.increment("api-calls",2)})),ft.increment("api-calls",1))}release(){this.valid&&(this.querySet.destroy(),this.resolveQueryBufer.destroy(),this.resultQueryBuffer.destroy(),ft.increment("buffer-data",-16*Ne.TIMESTAMP_COUNT),ft.increment("api-calls",3),this.valid=!1)}}Ne.TIMESTAMP_COUNT=2;const Le={stride:32,instanced:!1,attributes:[{index:0,name:"vertex_position_u",offset:0,format:F.FLOAT_4},{index:1,name:"vertex_normal_v",offset:16,format:F.FLOAT_4}]},Oe={stride:20,instanced:!1,attributes:[{index:0,name:"vertex_position",offset:0,format:F.FLOAT_3},{index:1,name:"vertex_tc",offset:12,format:F.FLOAT_2}]},Ge={stride:40,instanced:!0,attributes:[{index:2,name:"instance_position_scale",offset:0,format:F.FLOAT_4},{index:3,name:"instance_rotation",offset:16,format:F.FLOAT_3},{index:4,name:"instance_color",offset:28,format:F.FLOAT_3}]};class Ve{constructor(e){if(this.contextWrapper=me(),this.vao=null,this.valid=!0,this.descriptor=e,this.extension=this.contextWrapper.getVertexArrayObjectExtension(),st().vertexArray&&this.extension){this.vao=this.extension.createVertexArrayOES(),this.extension.bindVertexArrayOES(this.vao);const t=e.mesh;this.contextWrapper.configDraw(t.vertexBufferDescriptor,t.indexBufferDescriptor.buffer,e.instanceData),this.extension.bindVertexArrayOES(null),ft.increment("api-calls",3)}}getId(){return this.vao}getMesh(){return this.descriptor.mesh}getInstanceData(){return this.descriptor.instanceData}release(){this.valid&&this.vao&&(this.extension?.deleteVertexArrayOES(this.vao),ft.increment("api-calls",1),this.valid=!1)}}class We{constructor(e){this.context=be(),this.valid=!0,this.descriptor=e,this.vao=this.context.createVertexArray(),this.context.bindVertexArray(this.vao);const t=e.mesh;Ee().configDraw(t.vertexBufferDescriptor,t.indexBufferDescriptor.buffer,e.instanceData),this.context.bindVertexArray(null),ft.increment("api-calls",3)}getId(){return this.vao}getMesh(){return this.descriptor.mesh}getInstanceData(){return this.descriptor.instanceData}release(){this.valid&&(this.context.deleteVertexArray(this.vao),ft.increment("api-calls",1),this.valid=!1)}}class qe{constructor(e){this.descriptor=e}getId(){return null}getMesh(){return this.descriptor.mesh}getInstanceData(){return this.descriptor.instanceData}release(){}}function Xe(e){return Ze()?new Ve(e):et()?new We(e):new qe(e)}class ke{static updateMaxCellDistance(){const e=pt.getCellSize()/2,t=e*e;ke.maxCellDistance=Math.sqrt(t+t)}static getMaxCellDistance(){return ke.maxCellDistance}constructor(e,t,i,s){this.x=0,this.z=0,this.entities=[],this.drawConfigs=[],this.valid=!1,this.instanceCount=0,this.vertexCount=0,this.triangleCount=0,this.cornerPoints=[],this.aabbMin=n(),this.aabbMax=n(),this.initialize(e,t,i,s)}getX(){return this.x}getZ(){return this.z}isValid(){return this.valid}initialize(e,t,i,s){if(this.x=i,this.z=s,this.entities=e,this.instanceCount=e.length,this.instanceBuffer=this.createInstanceBuffer(t),this.createDrawConfigs(t),this.valid=!0,ft.increment("instances",e.length),!this.cornerPoints.length)for(let e=0;e<8;e++)this.cornerPoints.push(u())}createDrawConfigs(e){this.vertexCount=0,this.triangleCount=0;let t=0;for(const i of e){const e=this.entities.filter((e=>e.mesh===i.name)).length;if(e){const s=Xe({mesh:i,instanceData:{buffer:this.instanceBuffer,index:1,vertexCount:e,offset:t*Ge.stride,layout:Ge}});this.drawConfigs.push(s),this.vertexCount+=i.vertexBufferDescriptor.vertexCount*e,this.triangleCount+=i.indexBufferDescriptor.indexCount/3*e,t+=e}}ft.increment("vertices",this.vertexCount),ft.increment("triangles",this.triangleCount)}createInstanceBuffer(e){return G({type:"data-callback",size:this.entities.length*Ge.stride,callback:t=>{const i=new Float32Array(t);let s=0;for(const t of e){const e=this.entities.filter((e=>e.mesh===t.name));e.length&&(this.addInstanceData(i,e,s),s+=e.length)}},usage:M.VERTEX})}addInstanceData(e,t,i){for(let s=0;s<t.length;s++){const n=t[s],r=10*(s+i),a=[...n.position,n.scale,...n.rotation,...n.color];e.set(a,r)}}render(e){if(pt.isFrustumCulling()&&!this.isInFrustum())return;ft.increment("rendered-cells",1);let t=0;const i=st().instanceOffset;i&&e.setVertexBufferCommand({buffer:this.instanceBuffer,index:1,vertexCount:this.entities.length,layout:Ge});for(const s of this.drawConfigs){const n=s.getInstanceData()?.vertexCount??1;e.setDrawConfigCommand({drawConfig:s});const r=i?t:0;e.drawInstancedIndexedCommand({indexCount:s.getMesh().indexBufferDescriptor.indexCount,instanceCount:n,instanceOffset:r}),ft.increment("rendered-vertices",s.getMesh().vertexBufferDescriptor.vertexCount*n),ft.increment("rendered-triangles",s.getMesh().indexBufferDescriptor.indexCount/3*n),t+=n}}isInFrustum(){return this.computeCornerPointsInNdc(),this.computeAabbMin(),this.computeAabbMax(),this.aabbMin[0]<=1&&this.aabbMin[1]<=1&&this.aabbMin[2]<=1&&this.aabbMax[0]>=-1&&this.aabbMax[1]>=-1&&this.aabbMax[2]>=-1}computeCornerPointsInNdc(){const e=pt.getCellSize()/2;this.worldSpaceToNdc(d(this.cornerPoints[0],this.x-e,0,this.z+e,1)),this.worldSpaceToNdc(d(this.cornerPoints[1],this.x-e,e,this.z+e,1)),this.worldSpaceToNdc(d(this.cornerPoints[2],this.x+e,e,this.z+e,1)),this.worldSpaceToNdc(d(this.cornerPoints[3],this.x+e,0,this.z+e,1)),this.worldSpaceToNdc(d(this.cornerPoints[4],this.x-e,0,this.z-e,1)),this.worldSpaceToNdc(d(this.cornerPoints[5],this.x-e,e,this.z-e,1)),this.worldSpaceToNdc(d(this.cornerPoints[6],this.x+e,e,this.z-e,1)),this.worldSpaceToNdc(d(this.cornerPoints[7],this.x+e,0,this.z-e,1))}computeAabbMin(){a(this.aabbMin,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY);for(const e of this.cornerPoints)this.aabbMin[0]=Math.min(this.aabbMin[0],e[0]),this.aabbMin[1]=Math.min(this.aabbMin[1],e[1]),this.aabbMin[2]=Math.min(this.aabbMin[2],e[2])}computeAabbMax(){a(this.aabbMax,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY);for(const e of this.cornerPoints)this.aabbMax[0]=Math.max(this.aabbMax[0],e[0]),this.aabbMax[1]=Math.max(this.aabbMax[1],e[1]),this.aabbMax[2]=Math.max(this.aabbMax[2],e[2])}worldSpaceToNdc(e){return function(e,t,i){var s=t[0],n=t[1],r=t[2],a=t[3];e[0]=i[0]*s+i[4]*n+i[8]*r+i[12]*a,e[1]=i[1]*s+i[5]*n+i[9]*r+i[13]*a,e[2]=i[2]*s+i[6]*n+i[10]*r+i[14]*a,e[3]=i[3]*s+i[7]*n+i[11]*r+i[15]*a}(e,e,bt.getVP()),function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e}(e,e,1/Math.abs(e[3]))}recreate(e){this.releaseResources(),this.instanceBuffer=this.createInstanceBuffer(e),this.createDrawConfigs(e)}release(){if(this.valid){for(const e of this.drawConfigs){const t=this.entities.find((t=>t.mesh===e.getMesh().name));t&&_(t.color)}for(const e of this.entities)_(e.position),_(e.rotation);this.releaseResources(),this.valid=!1}}releaseResources(){this.instanceBuffer.release();for(const e of this.drawConfigs)e.release();this.drawConfigs.length=0,ft.increment("instances",-this.instanceCount),ft.increment("vertices",-this.vertexCount),ft.increment("triangles",-this.triangleCount)}}ke.M=h(),ke.q=m(),ke.maxCellDistance=0;class Ye{constructor(e){this.context=U(),this.size=0,this.valid=!0,this.id=this.context.createTexture(),this.context.bindTexture(this.context.TEXTURE_2D,this.id),this.context.texImage2D(this.context.TEXTURE_2D,0,this.getInternalFormat(e),e.width,e.height,0,this.getFormat(e),this.getType(e),null),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MIN_FILTER,this.context.NEAREST),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_MAG_FILTER,this.context.NEAREST),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_S,this.context.CLAMP_TO_EDGE),this.context.texParameteri(this.context.TEXTURE_2D,this.context.TEXTURE_WRAP_T,this.context.CLAMP_TO_EDGE),this.size=e.width*e.height*4,ft.increment("texture-data",this.size),ft.increment("api-calls",7)}getId(){return this.id}getFormat(e){switch(e.format){case"rgba8":return this.context.RGBA;case"depth":return this.context.DEPTH_COMPONENT}}release(){this.valid&&(this.context.deleteTexture(this.id),ft.increment("texture-data",-this.size),ft.increment("api-calls",1),this.valid=!1)}}class Qe extends Ye{getInternalFormat(e){switch(e.format){case"rgba8":return this.context.RGBA;case"depth":return this.context.DEPTH_COMPONENT}}getType(e){switch(e.format){case"rgba8":return this.context.UNSIGNED_BYTE;case"depth":return this.context.UNSIGNED_INT}}}class He extends Ye{constructor(e){super(e)}getInternalFormat(e){switch(e.format){case"rgba8":return this.context.RGBA8;case"depth":return this.context.DEPTH_COMPONENT32F}}getType(e){switch(e.format){case"rgba8":return this.context.UNSIGNED_BYTE;case"depth":return this.context.FLOAT}}}class $e{constructor(e){this.device=A(),this.size=0,this.valid=!0,this.id=this.device.createTexture({dimension:"2d",format:this.getFormat(e),usage:this.getUsage(e),size:{width:e.width,height:e.height},label:e.label}),this.sampler=this.device.createSampler({label:e.label,minFilter:"nearest",magFilter:"nearest",mipmapFilter:"nearest",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge"}),this.size=e.width*e.height*4,ft.increment("texture-data",this.size),ft.increment("api-calls",2)}getUsage(e){let t=0;return e.rendered&&(t|=GPUTextureUsage.RENDER_ATTACHMENT),e.sampled&&(t|=GPUTextureUsage.TEXTURE_BINDING),t}getId(){return this.id}getSampler(){return this.sampler}getBindGroup(e,t){return this.bindGroup||(this.bindGroup=this.device.createBindGroup({layout:e.getBindGroupLayout(t),entries:[{binding:0,resource:this.sampler},{binding:1,resource:this.getView()}]}),ft.increment("api-calls",1)),this.bindGroup}getFormat(e){switch(e.format){case"rgba8":return"rgba8unorm";case"depth":return"depth32float"}}getView(){return this.view||(this.view=this.id.createView(),ft.increment("api-calls",1)),this.view}release(){this.valid&&(this.id.destroy(),ft.increment("texture-data",-this.size),ft.increment("api-calls",1),this.valid=!1)}}function je(e){return Ze()?new Qe(e):et()?new He(e):new $e(e)}var Ke,Je;function Ze(){return Ct.getRenderingApi()===Ke.WEBGL_1}function et(){return Ct.getRenderingApi()===Ke.WEBGL_2}!function(e){e[e.WEBGL_1=1]="WEBGL_1",e[e.WEBGL_2=2]="WEBGL_2",e[e.WEBGPU=3]="WEBGPU"}(Ke||(Ke={}));class tt{constructor(){this.recreating=!1,this.vertexBuffers=[],this.indexBuffers=[],this.meshes=[],this.lightDirection=n(),this.cells=[],this.cellsPool=[]}getRenderingApi(){return this.renderingApi}getCanvas(){return this.canvas}getContext(){return this.context}async initialize(e){this.createCell=e,await this.initializeWithApi()}getApiList(){switch(pt.getRenderingApi()){case Je.WEBGPU:return[Ke.WEBGPU];case Je.WEBGL_2:return[Ke.WEBGL_2];case Je.WEBGL_1:return[Ke.WEBGL_1];default:return[Ke.WEBGPU,Ke.WEBGL_2,Ke.WEBGL_1]}}async initializeWithApi(e=this.getApiList()){this.canvas=this.getCanvasElement();for(const t of e)try{this.renderingApi=t,await this.createResources();for(const e of this.cells)e.recreate(this.meshes);return}catch(e){e instanceof it||console.error(e)}throw new Error("No rendering API is available")}async createResources(){if(this.context=await async function(){if(Ze()){const e=new pe;return e.initialize(),e}if(et()){const e=new Te;return e.initialize(),e}{const e=new D;return await e.initialize(),e}}(),!st().instancedRendering)throw new Error("Instanced rendering is not supported");if(!st().depthTexture)throw new Error("Depth textures are not supported");const e=this.createLambertianPipeline(),t=this.createQuadPipeline();this.createQuery(),this.createMeshes(),this.createUniformBuffer(),this.recreateRenderpassAttachments(),this.createCanvasDrawConfig(),this.lambertianPipeline=await e,this.quadPipeline=await t}createCanvasDrawConfig(){const e=this.meshes.find((e=>"quad"===e.name));if(!e)throw new Error("Couldn't find quad mesh");this.canvasDrawConfig=Xe({mesh:e})}getCanvasElement(){const e=document.querySelector("canvas");try{if(!e)throw new Error("Couldn't find the canvas element")}finally{}return e}addMesh(e,t,i,s,n,r){this.vertexBuffers.push(t),this.indexBuffers.push(i);const a={name:e,vertexBufferDescriptor:{buffer:t,index:0,vertexCount:s,layout:r},indexBufferDescriptor:{buffer:i,indexCount:n}};this.meshes.push(a)}async createLambertianPipeline(){return R({label:"lambertian pipeline",shader:Be({name:"lambertian",vertexBufferLayouts:[Le,Ge],label:"lambertian shader"}),vertexBufferLayouts:[Le,Ge],attachmentFormats:["rgba8"],depthAttachment:!0})}async createQuadPipeline(){return R({label:"quad pipeline",shader:Be({name:"quad",vertexBufferLayouts:[Oe],label:"quad shader"}),vertexBufferLayouts:[Oe],attachmentFormats:["canvas"]})}createQuery(){var e;st().gpuTimer&&(this.query=(e={label:"gpu timer query",handler:e=>{mt.addElapsedGpuTime(e)}},Ze()?new Pe(e):et()?new ze(e):new Ne(e)))}createMeshes(){!function(){const e=st().uvUp,t=e?1:0,i=e?0:1,s=G({type:"data-callback",callback:e=>{new Float32Array(e).set([-1,1,0,0,t,-1,-1,0,0,i,1,-1,0,1,i,1,1,0,1,t])},size:128,usage:M.VERTEX,label:"Quad vertex buffer"}),n=G({type:"data-callback",callback:e=>{new Uint16Array(e).set([0,1,2,3,0,2])},size:12,usage:M.INDEX,label:"Quad index buffer"});Ct.addMesh("quad",s,n,4,6,Oe)}(),function(){const e=st().uvUp,t=e?1:0,i=e?0:1,s=G({type:"data-callback",callback:e=>{new Float32Array(e).set([-1,0,-1,0,0,1,0,t,-1,0,1,0,0,1,0,i,1,0,1,1,0,1,0,i,1,0,-1,1,0,1,0,t])},size:128,usage:M.VERTEX,label:"Plane vertex buffer"}),n=G({type:"data-callback",callback:e=>{new Uint16Array(e).set([0,1,2,3,0,2])},size:12,usage:M.INDEX,label:"Plane index buffer"});Ct.addMesh("plane",s,n,4,6,Le)}(),function(){const e=G({type:"data-callback",callback:e=>{new Float32Array(e).set([-.5,.5,.5,0,0,0,1,0,-.5,-.5,.5,0,0,0,1,0,.5,-.5,.5,0,0,0,1,0,.5,.5,.5,0,0,0,1,0,-.5,.5,-.5,0,-1,0,0,0,-.5,-.5,-.5,0,-1,0,0,0,-.5,-.5,.5,0,-1,0,0,0,-.5,.5,.5,0,-1,0,0,0,.5,.5,.5,0,1,0,0,0,.5,-.5,.5,0,1,0,0,0,.5,-.5,-.5,0,1,0,0,0,.5,.5,-.5,0,1,0,0,0,.5,.5,-.5,0,0,0,-1,0,.5,-.5,-.5,0,0,0,-1,0,-.5,-.5,-.5,0,0,0,-1,0,-.5,.5,-.5,0,0,0,-1,0,-.5,.5,-.5,0,0,1,0,0,-.5,.5,.5,0,0,1,0,0,.5,.5,.5,0,0,1,0,0,.5,.5,-.5,0,0,1,0,0,-.5,-.5,.5,0,0,-1,0,0,-.5,-.5,-.5,0,0,-1,0,0,.5,-.5,-.5,0,0,-1,0,0,.5,-.5,.5,0,0,-1,0,0])},size:768,usage:M.VERTEX,label:"Cube vertex buffer"}),t=G({type:"data-callback",callback:e=>{new Uint16Array(e).set([0,1,2,3,0,2,4,5,6,7,4,6,8,9,10,11,8,10,12,13,14,15,12,14,16,17,18,19,16,18,20,21,22,23,20,22])},size:72,usage:M.INDEX,label:"Cube index buffer"});Ct.addMesh("cube",e,t,24,36,Le)}(),ft.set("meshes",this.meshes.length)}createUniformBuffer(){if(st().uniformBuffer){const e=4;this.uniformBuffer=G({type:"size",size:76+e,usage:M.UNIFORM,dynamic:!0});const t=1;this.uniformBufferData=new Float32Array(19+t)}}async render(){this.clearPerFrameStatistics(),this.recreating&&await this.handleRecreation(),this.handleResize(),this.renderScene(),this.renderToCanvas(),this.commandBuffer.execute()}renderScene(){this.lambertianRenderpass.setPipelineCommand(this.lambertianPipeline),this.updateCells(),this.updateUniforms(),this.renderCells()}renderToCanvas(){this.quadRenderpass.setPipelineCommand(this.quadPipeline),this.quadRenderpass.setDrawConfigCommand({drawConfig:this.canvasDrawConfig}),this.quadRenderpass.setUniformTextureCommand({name:"image",value:this.color,index:0}),this.quadRenderpass.drawIndexedCommand(this.canvasDrawConfig.getMesh().indexBufferDescriptor.indexCount)}async handleRecreation(){await this.release();const e=document.createElement("canvas");this.canvas.replaceWith(e),this.canvas=e,await this.initializeWithApi(),this.recreating=!1}handleResize(){this.canvas.width===window.innerWidth&&this.canvas.height===window.innerHeight||(this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,vt.recreate(),bt.invalidate(),this.recreateRenderpassAttachments())}recreateRenderpassAttachments(){this.color?.release(),this.depth?.release(),this.color=je({type:"2d",format:"rgba8",width:this.canvas.clientWidth,height:this.canvas.clientHeight,rendered:!0,sampled:!0,label:"color buffer"}),this.depth=je({type:"2d",format:"depth",width:this.canvas.clientWidth,height:this.canvas.clientHeight,rendered:!0,label:"depth buffer"}),this.lambertianRenderpass?.release(),this.quadRenderpass?.release(),this.commandBuffer=("default command buffer",Ze()||et()?new Ae:new Z("default command buffer")),this.lambertianRenderpass=this.commandBuffer.createRenderpass({type:"offscreen",colorAttachments:[{texture:this.color,clearColor:[.7,.8,1,1]}],depthStencilAttachment:{texture:this.depth,clearValue:1},label:"lambertian renderpass",query:this.query}),this.quadRenderpass=this.commandBuffer.createRenderpass({type:"canvas",label:"canvas renderpass"})}updateCells(){this.removeCells(),this.addCells()}removeCells(){this.cells.filter((e=>!this.isCellInRange(e.getX(),e.getZ()))).forEach((e=>{e.release(),this.cellsPool.push(e)})),this.cells=this.cells.filter((e=>e.isValid()))}addCells(){const e=pt.getCellSize(),t=bt.getPosition(),i=Math.round(t[0]/e)*e,s=Math.round(t[2]/e)*e,n=nt.getMaxFrustumDistance(),r=Math.round(n/e)+2;let a=0;for(let t=-r;t<=r;t++)for(let n=-r;n<=r;n++){const r=i+n*e,o=s+t*e,c=this.isCellInRange(r,o);if(this.cells.every((e=>e.getX()!==r||e.getZ()!==o))&&c){const e=this.getCell(r,o);this.cells.push(e)}this.updateCellsDebugger(a,n,t,r,o,c),a++}}getCell(e,t){const i=this.cellsPool.pop();return i?(i.initialize(this.createCell(e,t),this.meshes,e,t),i):new ke(this.createCell(e,t),this.meshes,e,t)}updateCellsDebugger(e,t,i,s,n,r){if(pt.isCellsDebugger()){if(r){const t=this.cells.find((e=>e.getX()===s&&e.getZ()===n));t&&(pt.isFrustumCulling()&&t.isInFrustum()?vt.setCellState(e,"in-frustum"):vt.setCellState(e,"in-range"))}else vt.setCellState(e,"out-of-range");0===t&&0===i&&vt.setCellState(e,"camera")}}renderCells(){ft.set("cells",this.cells.length);for(const e of this.cells)e.render(this.lambertianRenderpass)}clearPerFrameStatistics(){ft.set("api-calls",0),ft.set("draw-calls",0),ft.set("rendered-cells",0),ft.set("rendered-instances",0),ft.set("rendered-vertices",0),ft.set("rendered-triangles",0)}updateUniforms(){l(this.lightDirection,a(this.lightDirection,-1,-2,-3)),st().uniformBuffer?(this.uniformBufferData.set(bt.getVP(),0),this.uniformBufferData.set(this.lightDirection,16),this.uniformBuffer.setData({type:"buffer",data:this.uniformBufferData}),this.lambertianRenderpass.setUniformBufferCommand({index:0,name:"frame_data",value:this.uniformBuffer})):(this.lambertianRenderpass.setUniformMat4Command({name:"VP",value:bt.getVP()}),this.lambertianRenderpass.setUniformVec3Command({name:"light",value:this.lightDirection}))}isCellInRange(e,t){const i=nt.getMaxFrustumDistance(),s=ke.getMaxCellDistance(),n=bt.getPosition(),r=e-n[0],a=t-n[2];return Math.sqrt(r*r+a*a)<=i+s}recreate(){this.recreating=!0}removeAllCells(){for(const e of this.cells)e.release();this.cells.length=0}async release(){await this.context.stop(),st().gpuTimer&&this.query?.release(),this.meshes.length=0;for(const e of this.vertexBuffers)e.release();this.vertexBuffers.length=0;for(const e of this.indexBuffers)e.release();this.canvasDrawConfig.release(),this.indexBuffers.length=0,this.uniformBuffer?.release(),this.lambertianRenderpass.release(),this.quadRenderpass.release(),this.depth?.release(),this.color?.release(),this.quadPipeline.getShader().release(),this.lambertianPipeline.getShader().release(),this.context.release()}}class it extends Error{}function st(){return Ct.getContext().getCapabilities()}class nt{static getMaxFrustumDistance(){return this.maxFrustumDistance}static updateMaxFrustumDistance(){const e=function(e,t){if(!t){const e=Ct.getCanvas();t=e.clientWidth/e.clientHeight}return 2*Math.atan(Math.tan(.5*s(e))*t)}(pt.getFovY());this.maxFrustumDistance=pt.getViewDistance()/Math.cos(e/2)}constructor(){this.position=r(0,5,15),this.rotationY=0,this.R=h(),this.q=m(),this.tempVec=n(),this.V=h(),this.P=h(),this.VP=h(),this.forward=n(),this.right=n(),this.valid=!1,nt.updateMaxFrustumDistance()}getPosition(){return this.position}move(e){o(this.position,this.position,e),this.valid=!1}getRotationY(){return this.rotationY}rotateY(e){this.rotationY+=e,this.valid=!1}getVP(){return this.valid||(this.update(),this.valid=!0),this.VP}getForward(){return this.valid||(this.update(),this.valid=!0),this.forward}getRight(){return this.valid||(this.update(),this.valid=!0),this.right}update(){this.updateV(),this.updateP(),function(e,t,i){var s=t[0],n=t[1],r=t[2],a=t[3],o=t[4],c=t[5],l=t[6],h=t[7],u=t[8],d=t[9],m=t[10],p=t[11],f=t[12],g=t[13],x=t[14],v=t[15],E=i[0],b=i[1],T=i[2],C=i[3];e[0]=E*s+b*o+T*u+C*f,e[1]=E*n+b*c+T*d+C*g,e[2]=E*r+b*l+T*m+C*x,e[3]=E*a+b*h+T*p+C*v,E=i[4],b=i[5],T=i[6],C=i[7],e[4]=E*s+b*o+T*u+C*f,e[5]=E*n+b*c+T*d+C*g,e[6]=E*r+b*l+T*m+C*x,e[7]=E*a+b*h+T*p+C*v,E=i[8],b=i[9],T=i[10],C=i[11],e[8]=E*s+b*o+T*u+C*f,e[9]=E*n+b*c+T*d+C*g,e[10]=E*r+b*l+T*m+C*x,e[11]=E*a+b*h+T*p+C*v,E=i[12],b=i[13],T=i[14],C=i[15],e[12]=E*s+b*o+T*u+C*f,e[13]=E*n+b*c+T*d+C*g,e[14]=E*r+b*l+T*m+C*x,e[15]=E*a+b*h+T*p+C*v}(this.VP,this.P,this.V)}updateV(){!function(e,t){var i=t[0],s=t[1],n=t[2],r=t[3],a=i+i,o=s+s,c=n+n,l=i*a,h=s*a,u=s*o,d=n*a,m=n*o,p=n*c,f=r*a,g=r*o,x=r*c;e[0]=1-u-p,e[1]=h+x,e[2]=d-g,e[3]=0,e[4]=h-x,e[5]=1-l-p,e[6]=m+f,e[7]=0,e[8]=d+g,e[9]=m-f,e[10]=1-l-u,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1}(this.R,function(e,t,i,s){var n=.5*Math.PI/180;t*=n,i*=n,s*=n;var r=Math.sin(t),a=Math.cos(t),o=Math.sin(i),c=Math.cos(i),l=Math.sin(s),h=Math.cos(s);return e[0]=r*c*h-a*o*l,e[1]=a*o*h+r*c*l,e[2]=a*c*l-r*o*h,e[3]=a*c*h+r*o*l,e}(this.q,0,-this.rotationY,0)),function(e,t,i){var s,n,r,a,o,c,l,h,u,d,m,p,f=i[0],g=i[1],x=i[2];t===e?(e[12]=t[0]*f+t[4]*g+t[8]*x+t[12],e[13]=t[1]*f+t[5]*g+t[9]*x+t[13],e[14]=t[2]*f+t[6]*g+t[10]*x+t[14],e[15]=t[3]*f+t[7]*g+t[11]*x+t[15]):(s=t[0],n=t[1],r=t[2],a=t[3],o=t[4],c=t[5],l=t[6],h=t[7],u=t[8],d=t[9],m=t[10],p=t[11],e[0]=s,e[1]=n,e[2]=r,e[3]=a,e[4]=o,e[5]=c,e[6]=l,e[7]=h,e[8]=u,e[9]=d,e[10]=m,e[11]=p,e[12]=s*f+o*g+u*x+t[12],e[13]=n*f+c*g+d*x+t[13],e[14]=r*f+l*g+m*x+t[14],e[15]=a*f+h*g+p*x+t[15])}(this.V,this.R,function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e}(this.tempVec,this.position)),a(this.forward,this.R[8],this.R[9],-this.R[10]),a(this.right,this.R[0],this.R[1],-this.R[2])}updateP(){const e=s(pt.getFovY()),t=Ct.getCanvas(),i=t.clientWidth/t.clientHeight,n=pt.getViewDistance();st().ndcCube?function(e,t,i,s,n){var r,a=1/Math.tan(t/2);e[0]=a/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=n&&n!==1/0?(r=1/(s-n),e[10]=(n+s)*r,e[14]=2*n*s*r):(e[10]=-1,e[14]=-2*s)}(this.P,e,i,.5,n):function(e,t,i,s,n){var r,a=1/Math.tan(t/2);e[0]=a/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=n&&n!==1/0?(r=1/(.5-n),e[10]=n*r,e[14]=.5*n*r):(e[10]=-1,e[14]=-.5)}(this.P,e,i,0,n)}invalidate(){this.valid=!1}}nt.maxFrustumDistance=0,function(e){e[e.AUTO=0]="AUTO",e[e.WEBGL_1=1]="WEBGL_1",e[e.WEBGL_2=2]="WEBGL_2",e[e.WEBGPU=3]="WEBGPU"}(Je||(Je={}));class rt{constructor(){this.renderingApi=Je.AUTO,this.fovY=50,this.viewDistance=500,this.cellSize=100,this.instanceCount=100,this.statistics=!1,this.frustumCulling=!0,this.cellsDebugger=!1,this.loadApi(),this.loadStatistics(),this.loadFrustumCulling(),this.loadCellsDebugger(),this.loadFovY(),this.loadViewDistance(),this.loadCellSize(),this.loadInstanceCount()}loadApi(){const e=localStorage.getItem("renderingApi");if(null==e)return;const t=Number.parseInt(e);t!==Je.AUTO&&t!==Je.WEBGL_1&&t!==Je.WEBGL_2&&t!==Je.WEBGPU||(this.renderingApi=t)}loadStatistics(){const e=localStorage.getItem("statistics");null!=e&&(this.statistics="true"===e)}loadFrustumCulling(){const e=localStorage.getItem("frustumCulling");null!=e&&(this.frustumCulling="true"===e)}loadCellsDebugger(){const e=localStorage.getItem("cellsDebugger");null!=e&&(this.cellsDebugger="true"===e)}loadFovY(){const e=localStorage.getItem("fovY");null!=e&&(this.fovY=Math.min(Math.max(1,+e),179))}loadViewDistance(){const e=localStorage.getItem("viewDistance");null!=e&&(this.viewDistance=Math.max(+e,1))}loadCellSize(){const e=localStorage.getItem("cellSize");null!=e&&(this.cellSize=Math.max(+e,1))}loadInstanceCount(){const e=localStorage.getItem("instanceCount");null!=e&&(this.instanceCount=Math.max(+e,0))}getRenderingApi(){return this.renderingApi}setRenderingApi(e){this.renderingApi=e,localStorage.setItem("renderingApi",this.renderingApi.toString()),Ct.recreate(),bt.invalidate()}isStatistics(){return this.statistics}setStatistics(e){this.statistics=e,localStorage.setItem("statistics",this.statistics.toString()),e||gt.hide()}isFrustumCulling(){return this.frustumCulling}setFrustumCulling(e){this.frustumCulling=e,localStorage.setItem("frustumCulling",this.frustumCulling.toString())}isCellsDebugger(){return this.cellsDebugger}setCellsDebugger(e){this.cellsDebugger=e,localStorage.setItem("cellsDebugger",this.cellsDebugger.toString()),vt.recreate(),e?vt.show():vt.hide()}getFovY(){return this.fovY}setFovY(e){this.fovY=e,localStorage.setItem("fovY",this.fovY.toString()),nt.updateMaxFrustumDistance(),vt.recreate(),bt.invalidate()}getViewDistance(){return this.viewDistance}setViewDistance(e){this.viewDistance=e,localStorage.setItem("viewDistance",this.viewDistance.toString()),nt.updateMaxFrustumDistance(),vt.recreate(),bt.invalidate()}getCellSize(){return this.cellSize}setCellSize(e){this.cellSize=e,localStorage.setItem("cellSize",this.cellSize.toString()),Ct.removeAllCells(),vt.recreate(),ke.updateMaxCellDistance()}getInstanceCount(){return this.instanceCount}setInstanceCount(e){this.instanceCount=e,localStorage.setItem("instanceCount",this.instanceCount.toString()),Ct.removeAllCells()}}class at{constructor(){this.statisticsElement=E("#statistics"),this.renderingApiElement=E("#rendering-api"),this.fpsFrameTimeElement=E("#fps-frame-time"),this.cpuTimeElement=E("#cpu-time"),this.gpuTimeElement=E("#gpu-time"),this.apiCallsElement=E("#api-calls"),this.drawCallsElement=E("#draw-calls"),this.bufferDataElement=E("#buffer-data"),this.textureDataElement=E("#texture-data"),this.meshesElement=E("#meshes"),this.cellsElement=E("#cells"),this.renderedCellsElement=E("#rendered-cells"),this.instancesElement=E("#instances"),this.renderedInstancesElement=E("#rendered-instances"),this.verticesElement=E("#vertices"),this.renderedVerticesElement=E("#rendered-vertices"),this.trianglesElement=E("#triangles"),this.renderedTrianglesElement=E("#rendered-triangles"),this.showingStatistics=!1}update(){pt.isStatistics()&&(this.showingStatistics||(this.statisticsElement.style.display="block",this.showingStatistics=!0),this.updateElements())}updateElements(){this.updateRenderingApi(),this.updateFpsFrameTime(),this.updateCpuTime(),this.updateGpuTime(),this.updateElement(this.apiCallsElement,"API calls","api-calls"),this.updateElement(this.drawCallsElement,"Draw calls","draw-calls"),this.updateBufferData(),this.updateTextureData(),this.updateElement(this.meshesElement,"Meshes","meshes"),this.updateElement(this.cellsElement,"Cells in range","cells"),this.updateElement(this.renderedCellsElement,"Rendered cells","rendered-cells"),this.updateElement(this.instancesElement,"Instances","instances"),this.updateElement(this.renderedInstancesElement,"Rendered instances","rendered-instances"),this.updateElement(this.verticesElement,"Vertices","vertices"),this.updateElement(this.renderedVerticesElement,"Rendered vertices","rendered-vertices"),this.updateElement(this.trianglesElement,"Triangles","triangles"),this.updateElement(this.renderedTrianglesElement,"Rendered triangles","rendered-triangles")}updateRenderingApi(){this.renderingApiElement.textContent=function(e){switch(e){case Ke.WEBGL_1:return"WebGL 1";case Ke.WEBGL_2:return"WebGL 2";case Ke.WEBGPU:return"WebGPU"}}(Ct.getRenderingApi())}updateFpsFrameTime(){const e=mt.getFps(),t=(1/e*1e3).toFixed(2);this.fpsFrameTimeElement.textContent=`${e} FPS / ${t} ms`}updateCpuTime(){const e=mt.getJsTime().toFixed(2);this.cpuTimeElement.textContent=`CPU time: ${e} ms`}updateGpuTime(){if(st().gpuTimer){const e=mt.getGpuTime().toFixed(2);this.gpuTimeElement.textContent=`GPU time: ${e} ms`}else this.gpuTimeElement.textContent=""}updateBufferData(){const e=b(ft.getValue("buffer-data")).toFixed(2);this.bufferDataElement.textContent=`Memory in buffers: ${e} MB`}updateTextureData(){const e=b(ft.getValue("texture-data")).toFixed(2);this.textureDataElement.textContent=`Memory in textures: ${e} MB`}updateElement(e,t,i){e.textContent=`${t}: ${ft.get(i)}`}hide(){this.statisticsElement.style.display="none",this.showingStatistics=!1}}class ot{constructor(){this.optionsPanel=E("#options"),this.opened=!1,this.initializeOpenOptionsButton(),this.initializeCloseOptionsButton(),this.apiSelector=this.initializeApiSelector(),this.initializeFovY(),this.initializeViewDistance(),this.initializeCellSize(),this.initializeInstanceCount(),this.initializeFullscreen(),this.initializeStatistics(),this.initializeFrustumCulling(),this.initializeCellsDebugger(),this.addKeyDownListener()}addKeyDownListener(){window.addEventListener("keydown",(e=>{"Escape"===e.code&&this.handleDialogChange(!this.opened)}))}initializeOpenOptionsButton(){E("#toggle-options-button").addEventListener("click",(()=>{this.handleDialogChange(!this.opened)}))}initializeCloseOptionsButton(){E("#close-options-button").onclick=()=>{this.handleDialogChange(!1)}}handleDialogChange(e){this.opened=e,this.opened?this.optionsPanel.style.display="block":this.optionsPanel.style.display="none"}initializeApiSelector(){const e=E("#rendering-api-selector");return e.value=pt.getRenderingApi().toString(),e.onchange=async()=>{pt.setRenderingApi(+this.apiSelector.value)},e}initializeFovY(){const e=E("#fovy-input");e.value=pt.getFovY().toString(),e.onchange=()=>{pt.setFovY(+e.value)}}initializeViewDistance(){const e=E("#view-distance-input");e.value=pt.getViewDistance().toString(),e.onchange=()=>{pt.setViewDistance(+e.value)}}initializeCellSize(){const e=E("#cell-size-input");e.value=pt.getCellSize().toString(),e.onchange=()=>{pt.setCellSize(+e.value)}}initializeInstanceCount(){const e=E("#instance-count-input");e.value=pt.getInstanceCount().toString(),e.onchange=()=>{pt.setInstanceCount(+e.value)}}initializeFullscreen(){const e=E("#fullscreen-input");e.checked=!!document.fullscreenElement,document.addEventListener("fullscreenchange",(()=>{e.checked=!!document.fullscreenElement})),e.onchange=async()=>{document.fullscreenElement?await document.exitFullscreen():await document.documentElement.requestFullscreen()}}initializeFrustumCulling(){const e=E("#frustum-culling-input");e.checked=pt.isFrustumCulling(),e.onchange=()=>{pt.setFrustumCulling(e.checked)}}initializeCellsDebugger(){const e=E("#cells-debugger-input");e.checked=pt.isCellsDebugger(),e.onchange=()=>{pt.setCellsDebugger(e.checked)}}initializeStatistics(){const e=E("#statistics-input");e.checked=pt.isStatistics(),e.onchange=()=>{pt.setStatistics(e.checked)}}getSelectedRenderingApi(){return Number.parseInt(this.apiSelector.value)}isDialogOpened(){return this.opened}}class ct{constructor(){this.grid=E("#cells-debugger"),this.cellElements=[]}recreate(){for(;this.grid.lastChild;)this.grid.removeChild(this.grid.lastChild);if(this.cellElements.length=0,!pt.isCellsDebugger())return;const e=nt.getMaxFrustumDistance(),t=2*(Math.round(e/pt.getCellSize())+2)+1;this.grid.style.gridTemplateColumns=`repeat(${t}, 1fr)`,this.grid.style.gridTemplateRows=`repeat(${t}, 1fr)`,this.createCells(t)}createCells(e){const t=Ct.getCanvas().clientHeight/3/e;for(let i=0;i<e*e;i++){const e=document.createElement("div");e.style.width=`${t}px`,e.style.height=`${t}px`,this.grid.appendChild(e),this.cellElements.push(e)}}show(){this.grid.style.display="grid"}hide(){this.grid.style.display="none"}setCellState(e,t){this.cellElements[e].className=this.getClass(t)}getClass(e){switch(e){case"camera":return"camera-cell";case"in-frustum":return"in-frustum-cell";case"in-range":return"in-range-cell";case"out-of-range":return"out-of-range-cell"}}}class lt{constructor(){this.statistics=new Map}get(e){const t=this.statistics.get(e);return void 0===t?"-":t.toLocaleString()}getValue(e){return this.statistics.get(e)??0}set(e,t){this.statistics.set(e,t)}increment(e,t){const i=(this.statistics.get(e)??0)+t;this.set(e,i)}}class ht{constructor(){this.startMoment=performance.now(),this.lastFrameEndMoment=this.startMoment,this.frameStartMoment=0,this.averageFps=0,this.frameCount=0,this.currentSecondFrameCount=0,this.lastFrameTime=0,this.frameTimeSum=0,this.averageJsTime=0,this.jsTimeSum=0,this.averageGpuTime=0,this.gpuTimeSum=0,this.gpuTimeCount=0,this.gpuSecondStartMoment=this.startMoment}addElapsedGpuTime(e){const t=performance.now();this.gpuTimeSum+=e,this.gpuTimeCount++,this.gpuSecondStartMoment+ht.ONE_SECOND<t&&(this.averageGpuTime=this.gpuTimeSum/this.gpuTimeCount,this.gpuTimeSum=0,this.gpuTimeCount=0,this.gpuSecondStartMoment=t)}startFrame(){this.frameStartMoment=performance.now()}endFrame(){const e=performance.now();this.jsTimeSum+=e-this.frameStartMoment,this.lastFrameTime=e-this.lastFrameEndMoment,this.frameTimeSum+=this.lastFrameTime,this.lastFrameEndMoment=e,this.frameCount++,this.currentSecondFrameCount++,this.frameTimeSum>=ht.ONE_SECOND&&(this.averageFps=Math.round(this.currentSecondFrameCount/this.frameTimeSum*ht.ONE_SECOND),this.averageJsTime=this.jsTimeSum/this.currentSecondFrameCount,this.jsTimeSum=0,this.frameTimeSum=0,this.currentSecondFrameCount=0,gt.update())}getDeltaTimeFactor(){return this.lastFrameTime}getFps(){return this.averageFps}getTimeInMillisecs(){return performance.now()-this.startMoment}getTimeInSecs(){return this.getTimeInMillisecs()/1e3}getFrameCount(){return this.frameCount}getJsTime(){return this.averageJsTime}getGpuTime(){return this.averageGpuTime}}ht.ONE_SECOND=1e3;class ut{constructor(){this.keysDown=new Map,window.addEventListener("blur",(()=>{this.keysDown.clear()})),window.addEventListener("keydown",(e=>{this.keysDown.set(e.code,e)})),window.addEventListener("keyup",(e=>{this.keysDown.delete(e.code)}))}isKeyDown(e){return!xt.isDialogOpened()&&this.keysDown.has(e)}}class dt{constructor(){this.movement=n()}update(){const e=mt.getDeltaTimeFactor();this.updateTranslation(e),this.updateRotation(e)}updateTranslation(e){const t=Et.isKeyDown("ShiftLeft")?10:1,i=dt.MOVE_SPEED*e*t,s=bt.getForward(),n=bt.getRight();a(this.movement,0,0,0);let r=!1;Et.isKeyDown("KeyA")&&(c(this.movement,this.movement,n),r=!0),Et.isKeyDown("KeyD")&&(o(this.movement,this.movement,n),r=!0),Et.isKeyDown("KeyW")&&(o(this.movement,this.movement,s),r=!0),Et.isKeyDown("KeyS")&&(c(this.movement,this.movement,s),r=!0),r&&(function(e,t,i){e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i}(this.movement,l(this.movement,this.movement),i),bt.move(this.movement))}updateRotation(e){const t=dt.ROTATION_SPEED*e;let i=0;Et.isKeyDown("KeyQ")&&(i+=t),Et.isKeyDown("KeyE")&&(i-=t),0!==i&&bt.rotateY(i)}}let mt,pt,ft,gt,xt,vt,Et,bt,Tt,Ct;async function _t(){try{console.log("This is a production build"),t=Array,mt=new ht,pt=new rt,ft=new lt,Et=new ut,Tt=new dt,Ct=new tt,await Ct.initialize(yt),bt=new nt,gt=new at,vt=new ct,xt=new ot}catch(e){console.error(e),await Ct.release()}await wt()}function yt(e,t){const i=[],s=pt.getInstanceCount(),n=pt.getCellSize();let r=C(Math.random(),Math.random(),Math.random());for(let a=0;a<s;a++){const s={position:C(e+Math.random()*n-n/2,.5,t+Math.random()*-n+n/2),rotation:C(0,0,0),scale:1,mesh:"cube",color:r};i.push(s)}return r=C(Math.random(),Math.random(),Math.random()),i.push({position:C(e,0,t),rotation:C(0,0,0),scale:n/2,mesh:"plane",color:r}),i}async function wt(){mt.startFrame(),Tt.update(),await Ct.render(),mt.endFrame(),requestAnimationFrame((async()=>{await wt()}))}dt.MOVE_SPEED=.025,dt.ROTATION_SPEED=.075,_t()})();